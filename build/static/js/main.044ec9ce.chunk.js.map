{"version":3,"sources":["hooks/useFetchGet.js","utils/receiveFetch.js","utils/sendFetch.js","pages/LoggedIn/FormList.js","utils/findMax.js","redux/formSlice.js","utils/debounce.js","utils/variables.js","components/createTypes/ParagraphType.js","components/createTypes/CheckboxType.js","components/createTypes/LineType.js","components/solveTypes/ParagraphType.js","components/solveTypes/CheckboxType.js","components/solveTypes/LineType.js","components/FormHeader.js","components/QuestionOptions.js","components/AddType.js","pages/LoggedIn/CreateForm.js","components/QuestResponse.js","components/UserResponse.js","pages/LoggedIn/FormResponses.js","components/FormOptions.js","components/NotFound.js","utils/groupArray.js","pages/LoggedIn/FormMain.js","pages/LoggedOut/FilloutForm.js","pages/LoggedOut/InfoPage.js","components/Aside.js","components/MobileAside.js","pages/LoggedIn/LoggedIn.js","pages/LoggedOut/Login.js","pages/LoggedOut/Register.js","components/Footer.js","components/Nav.js","pages/LoggedOut/LoggedOut.js","components/Loading.js","App.js","redux/store.js","index.js"],"names":["useFetchGet","url","useState","data","setData","useEffect","fetch","then","res","json","catch","err","alert","getDataFromServer","receiveFetch","request","body_data","a","method","mode","headers","body","JSON","stringify","sendFetch","FormList","forms","setForms","fetchedData","deleteForm","e","id","target","filter","f","className","onClick","window","location","href","map","form","to","pathname","form_title","findMaxSub","array","length","max","qq_id","forEach","element","findMaxMain","question_id","getFormInfo","createAsyncThunk","payload","form_id","response","formSlice","createSlice","name","initialState","reducers","addQuestion","state","action","newQuest","questions","quest_title","question_type","sub_questions","qq_title","push","addSubQuestion","index","findIndex","q","updateQuestion","value","updateSubQuestion","index_2","deleteQuestion","deleteSubQuestion","indexElement","prev","setRequired","required","changeType","type","sendQuestionsToApi","updateForm","sendInfoToApi","descrip","extraReducers","fulfilled","console","log","actions","debounce","func","timeout","wait","args","clearTimeout","setTimeout","componentsCreate","Paragraph","saveFormQuestions","dispatch","useDispatch","onChange","minRows","Checkbox","handleCheckbox","deleteCheckbox","box","placeholder","Line","componentsSolve","answer_text","handleInput","includes","answer","htmlFor","types","FormHeader","info","useSelector","saveForm","useCallback","QuestionOptions","checked","AddType","open","newQuestion","getAttribute","CreateForm","setOpen","questForm","TransitionGroup","component","quest","SpecificType","CSSTransition","classNames","enter","exit","QuestResponse","answersQuest","Object","entries","ans","answer_array","UserResponse","answersUser","ind","FormResponses","exact","activeClassName","path","FormOptions","useLocation","origin","navigator","clipboard","writeText","isActive","NotFound","groupArray","group","FormMain","useParams","setAnswersUser","setAnswersQuest","result","fetchData","FilloutForm","setForm","form_info","onSubmit","preventDefault","SuccessPage","Aside","localStorage","clear","MobileAside","openBurger","LoggedIn","InfoPage","Login","list","setList","username","password","loginfo","setLoginfo","errorinfo","setErrorinfo","setItem","message","addToList","removeFromList","x","autoComplete","onFocus","onBlur","Register","confirmpassword","registerInfo","setregisterInfo","Footer","Nav","LoggedOut","Loading","App","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","undefined","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.044ec9ce.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport default function useFetchGet(url) {\n    const [ data, setData ] = useState()\n\n    function getDataFromServer(url) {\n        fetch(url)\n        .then(res => res.json())\n        .then(res => setData(res))\n        .catch(err => alert(\"Website down\"))\n    }\n\n    useEffect(() => getDataFromServer(url), [])\n\n    return data\n};\n","export default async function receiveFetch(url, request, body_data) {\n    try {\n        const data = await fetch(url, {\n            method: request,\n            mode: \"cors\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(body_data)\n        })  \n        return data.json()\n    } catch {\n        alert(\"Website down\")\n    }\n}\n","export default function sendFetch(url, request, body_data) {\n    try {\n        fetch(url, {\n            method: request,\n            mode: \"cors\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(body_data)\n        })  \n    } catch {\n        alert(\"Website down\")\n    }\n}\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport useFetchGet from \"../../hooks/useFetchGet\";\nimport receiveFetch from \"../../utils/receiveFetch\"\nimport sendFetch from \"../../utils/sendFetch\"\n\nconst FormList = () => {\n\n    const [ forms, setForms ] = useState([]) \n\n    const fetchedData = useFetchGet(\"/api/get_forms\")\n\n    useEffect(() => {\n        if (fetchedData) setForms(fetchedData)\n    }, [fetchedData])\n\n    function createForm() {\n        receiveFetch(\"/api/create_form\", \"POST\", {})\n        .then(res => window.location.href = `/create_form/${res}`)\n    }\n\n    function deleteForm(e) {\n        sendFetch(\"/api/delete_form\", \"DELETE\", { id: e.target.id })\n        setForms(forms.filter(f => f.id != e.target.id))\n    }\n\n    return (\n        <main className=\"form-list\">\n            <div className=\"create-new\" onClick={createForm}>\n                <p>Create New Form</p>\n            </div>\n            <article>\n            {forms?.map(form => {\n                return (\n                    <div className=\"form-div\" key={form.id}>\n                        <Link to={{pathname:`/create_form/${form.id}`}}>\n                            {form.form_title}\n                        </Link>\n                        <div className=\"far fa-trash-alt\" id={form.id} onClick={deleteForm}></div>\n                    </div>\n                )\n            })\n            }\n            </article>\n        </main>\n    )\n};\n\nexport default FormList;\n","export function findMaxSub(array) {\r\n\r\n    if (!array) return 0\r\n    if (!array.length) return 0\r\n\r\n    let max = array[0].qq_id\r\n    \r\n    array.forEach(element => {\r\n        if (element.qq_id > max) max = element.qq_id\r\n    })\r\n\r\n    return max + 1\r\n}\r\n\r\nexport function findMaxMain(array) {\r\n\r\n    if (!array) return 0\r\n    if (!array.length) return 0\r\n\r\n    let max = array[0].question_id\r\n    \r\n    array.forEach(element => {\r\n        if (element.question_id > max) max = element.question_id\r\n    })\r\n\r\n    return max + 1\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport { findMaxMain, findMaxSub } from \"../utils/findMax\"\r\nimport receiveFetch from \"../utils/receiveFetch\"\r\nimport sendFetch from \"../utils/sendFetch\"\r\n\r\nexport const getFormInfo = createAsyncThunk(\r\n    \"getFormInfoAsync\",\r\n    async (payload) => {\r\n        const response = await receiveFetch(\"/api/get_form_info\", \"POST\", { id: payload.form_id })\r\n        return { response }\r\n    }\r\n)\r\n\r\nconst formSlice = createSlice({\r\n    name: \"form\",\r\n    initialState: [],\r\n    reducers: {\r\n        addQuestion: ( state, action ) => {\r\n            const newQuest = {\r\n                form_id: action.payload.form_id,\r\n                question_id: findMaxMain(state.questions), \r\n                quest_title: \"Question?\", \r\n                question_type: action.payload.question_type,\r\n                sub_questions: [{ qq_id: 0, qq_title: \"Option\" }],\r\n            };\r\n\r\n            if (state.questions === null) state.questions = []\r\n\r\n            state.questions.push(newQuest)\r\n        },\r\n\r\n        addSubQuestion: ( state, action ) => {\r\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\r\n\r\n            const newQuest = {\r\n                form_id: action.payload.form_id,\r\n                question_id: action.payload.id,\r\n                qq_id: findMaxSub(state.questions[index].sub_questions), \r\n                qq_title: \"Option\", \r\n            };\r\n            \r\n            if (state.questions[index].sub_questions === null) state.questions[index].sub_questions = []\r\n\r\n            state.questions[index].sub_questions.push(newQuest)\r\n        },\r\n\r\n        updateQuestion: ( state, action ) => {\r\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\r\n            state.questions[index].quest_title = action.payload.value\r\n        },\r\n\r\n        updateSubQuestion: ( state, action ) => {\r\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\r\n            const index_2 = state.questions[index].sub_questions.findIndex(q => q.qq_id == action.payload.qq_id)\r\n            state.questions[index].sub_questions[index_2].qq_title = action.payload.value\r\n        },\r\n\r\n        deleteQuestion: ( state, action ) => {\r\n            sendFetch(\"/api/delete_question\", \"DELETE\", { value: action.payload.value })\r\n            return { ...state, questions: state.questions.filter(q => q.question_id != action.payload.value.question_id)}\r\n        },\r\n\r\n        deleteSubQuestion: ( state, action ) => {\r\n\r\n            sendFetch(\"/api/delete_quest_sub\", \"DELETE\", { value: action.payload.value, qq_id: action.payload.qq_id })\r\n            const indexElement = state.questions.findIndex(q => q.question_id === action.payload.value.question_id)\r\n            return  {...state,\r\n            questions: state.questions.map((prev, index) =>\r\n                index === indexElement ? { ...prev, sub_questions: state.questions[indexElement].sub_questions.filter(q => q.qq_id != action.payload.qq_id) } : prev,\r\n            )}\r\n        },\r\n\r\n        setRequired: ( state, action ) => {\r\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\r\n            state.questions[index].required = !state.questions[index].required\r\n        },\r\n\r\n        changeType: ( state, action ) => {\r\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\r\n            state.questions[index].question_type = action.payload.type\r\n        },\r\n        \r\n        sendQuestionsToApi: ( state ) => {\r\n            sendFetch(\"/api/update_form_questions\", \"POST\", { questions: state.questions })\r\n        },\r\n\r\n        updateForm: ( state, action ) => {\r\n            state[action.payload.name] = action.payload.value\r\n        },\r\n\r\n        sendInfoToApi: ( state ) => {\r\n            sendFetch(\"/api/update_form_main\", \"POST\", { form_title: state.form_title, descrip: state.descrip, form_id : state.id })\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getFormInfo.fulfilled]: ( state, action ) => {\r\n            console.log(action.payload.response)\r\n            return action.payload.response\r\n        }\r\n    }\r\n})\r\n\r\nexport const { \r\n        addQuestion, \r\n        updateQuestion,\r\n        deleteQuestion,\r\n        deleteSubQuestion,\r\n        setRequired,\r\n        changeType,\r\n        updateForm,\r\n        sendQuestionsToApi,\r\n        updateSubQuestion,\r\n        addSubQuestion,\r\n        sendInfoToApi,\r\n    } = formSlice.actions;\r\n\r\nexport default formSlice.reducer;\r\n","export default function debounce(func, wait = 1000) {\n    \n    let timeout;\n\n    return function (...args) {\n\n      if (timeout) clearTimeout(timeout)\n      \n      timeout = setTimeout(() => func(...args), wait)\n    }\n}\n","import CheckboxCreate from \"../components/createTypes/CheckboxType\"\r\nimport ParagraphCreate from \"../components/createTypes/ParagraphType\"\r\nimport LineCreate from \"../components/createTypes/LineType\"\r\n\r\nimport CheckboxSolve from \"../components/solveTypes/CheckboxType\"\r\nimport ParagraphSolve from \"../components/solveTypes/ParagraphType\"\r\nimport LineSolve from \"../components/solveTypes/LineType\"\r\n\r\nexport const componentsCreate = {\r\n    Paragraph: ParagraphCreate,\r\n    Checkbox: CheckboxCreate,\r\n    Line: LineCreate,\r\n}\r\n\r\nexport const componentsSolve = {\r\n    Paragraph: ParagraphSolve,\r\n    Checkbox: CheckboxSolve,\r\n    Line: LineSolve,\r\n}\r\n\r\nexport const types = [\"Checkbox\", \"Paragraph\", \"Line\"];\r\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from \"react-redux\"\nimport { updateQuestion } from \"../../redux/formSlice\"\n\nconst ParagraphType = ({ value, saveFormQuestions }) => {\n\n    const dispatch = useDispatch()\n\n    const handleInput = e => dispatch(updateQuestion({id: value.question_id, value: e.target.value}))\n\n    return (\n        <div className=\"paragraph-create\" onChange={saveFormQuestions}>\n            <TextareaAutosize \n                name=\"quest_title\" \n                onChange={handleInput} \n                value={value.quest_title} \n            />\n            <TextareaAutosize minRows={3} />\n        </div>\n    )\n}\n\nexport default ParagraphType;\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from \"react-redux\"\nimport { updateQuestion, updateSubQuestion, addSubQuestion, deleteSubQuestion } from \"../../redux/formSlice\";\n\nconst CheckboxType = ({ value, saveFormQuestions }) => {\n\n    const dispatch = useDispatch()\n    \n    const handleInput = e => dispatch(updateQuestion({id: value.question_id, value: e.target.value}))\n    \n    const handleCheckbox = e => {\n        dispatch(updateSubQuestion({id: value.question_id, qq_id: e.target.id, value: e.target.value}))\n    }\n\n    const handleAdd = () => dispatch(addSubQuestion({ id: value.question_id, form_id: value.form_id }))\n    \n    const deleteCheckbox = e => dispatch(deleteSubQuestion({ value, qq_id: e.target.id }))\n\n    return (\n        <>\n        <div className=\"checkbox-create\" onClick={saveFormQuestions}>\n            <TextareaAutosize \n                onChange={handleInput} \n                name=\"quest_title\" \n                value={value.quest_title}\n            />\n            {value?.sub_questions?.map(box => {\n                return (\n                    <div className=\"check-box\" key={box.qq_id}>\n                        <div>\n                            <input \n                                className=\"check\"\n                                type=\"checkbox\" \n                                value={box.qq_title}\n                            />\n                            <input\n                                className=\"check-input\"\n                                id={box.qq_id} \n                                onChange={handleCheckbox}\n                                value={box.qq_title}\n                            />\n                        </div>\n                        <div id={box.qq_id} onClick={deleteCheckbox} className=\"fas fa-times\"></div>\n                    </div>\n                )\n            })}\n            <div className=\"fas fa-plus\" onClick={handleAdd}>\n                <input placeholder=\"Add Option...\"/>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default CheckboxType;\n","import { useDispatch } from \"react-redux\"\nimport { updateQuestion } from \"../../redux/formSlice\"\n\nconst LineType = ({ value, saveFormQuestions }) => {\n\n    const dispatch = useDispatch()\n\n    const handleInput = e => dispatch(updateQuestion({id: value.question_id, value: e.target.value}))\n\n    return (\n        <div className=\"line-create\" onChange={saveFormQuestions}>\n            <input \n                name=\"quest_title\" \n                onChange={handleInput} \n                value={value.quest_title} \n            />\n            <input />\n        </div>\n    )\n}\n\nexport default LineType;\n","import TextareaAutosize from 'react-textarea-autosize';\r\n\r\nconst ParagraphType = ({ value }) => {\r\n\r\n    const handleInput = e => value.answer_text = e.target.value\r\n    \r\n    return (\r\n        <>\r\n            <div>{value.quest_title}</div>\r\n            <TextareaAutosize minRows={3} onChange={handleInput}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParagraphType;\r\n","const CheckboxType = ({ value }) => {\r\n\r\n    const handleInput = e => {\r\n        if (!value[\"answer_array\"]) value[\"answer_array\"] = []\r\n        if (value[\"answer_array\"].includes(e.target.value)) {\r\n            value[\"answer_array\"] = value[\"answer_array\"].filter(answer => answer != e.target.value)\r\n        }\r\n        else value[\"answer_array\"].push(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>{value.quest_title}</h2>\r\n        {value?.sub_questions?.map(box => {\r\n            return (\r\n                <div className=\"check-box\" key={box.qq_id} >\r\n                    <input \r\n                        onChange={handleInput} \r\n                        type=\"checkbox\" \r\n                        id={box.qq_id + \"\" + box.question_id} \r\n                        value={box.qq_title} \r\n                    />\r\n                    <label htmlFor={box.qq_id + \"\" + box.question_id}>{box.qq_title}</label>\r\n                </div>\r\n            )\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckboxType;\r\n","const LineType = ({ value }) => {\r\n\r\n    const handleInput = e => value.answer_text = e.target.value\r\n     \r\n    return (\r\n        <>\r\n            <div>{value.quest_title}</div>\r\n            <input type=\"text\" onChange={handleInput}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineType;\r\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport debounce from '../utils/debounce';\nimport { useCallback } from 'react';\nimport { sendInfoToApi, updateForm } from '../redux/formSlice';\n\nconst FormHeader = () => {\n\n    const dispatch = useDispatch()\n\n    const info = useSelector(state => state.form)\n\n    const saveForm = useCallback(debounce(() => dispatch(sendInfoToApi())), []);\n\n    const handleInput = e => dispatch(updateForm({ name: e.target.name, value: e.target.value}))\n\n    return (\n        <header className=\"form-header\" onChange={saveForm}>\n            <TextareaAutosize \n                onChange={handleInput} \n                name=\"form_title\" \n                value={info.form_title}\n            />\n            <TextareaAutosize \n                onChange={handleInput}\n                name=\"descrip\" \n                value={info.descrip || \"\"}\n                minRows={3}\n            />\n        </header>\n    )\n}\n\nexport default FormHeader;\n","import { useDispatch } from \"react-redux\"\nimport { deleteQuestion, changeType, setRequired } from \"../redux/formSlice\"\nimport { types } from \"../utils/variables\"\n\nconst QuestionOptions = ({ value }) => {\n\n    const dispatch = useDispatch();\n\n    const toDeleteQuestions = () => dispatch(deleteQuestion({ value }))\n    \n    const toSetRequired = () => dispatch(setRequired({ id: value.question_id }))\n\n    const toChangeType = e => dispatch(changeType({ id: value.question_id, type: e.target.value }))\n\n    return (\n        <div className=\"question-options\">\n            <div className=\"far fa-trash-alt\" onClick={toDeleteQuestions}></div>\n            <div className=\"required\">\n                <label htmlFor=\"required\">Required</label>\n                <input checked={value.required} id=\"required\" type=\"checkbox\" className=\"checkbox-fake\" onClick={toSetRequired} />\n            </div>\n            <div>\n                <select value={value.question_type} onChange={toChangeType} name=\"type\" id=\"type\">\n                    {types.map(type => <option key={type} value={type}>{type}</option>)}\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default QuestionOptions;\n","import { useDispatch } from \"react-redux\"\nimport { addQuestion } from \"../redux/formSlice\";\n\nconst AddType = ({ open, form_id }) => {\n\n      const dispatch = useDispatch();    \n\n      function newQuestion(e) {\n            dispatch(addQuestion({question_type: e.target.getAttribute(\"name\"), form_id}))                  \n      }\n\n      if (!open) return null\n\n      return (    \n      \t<div className=\"choose-type\">\n\t      \t<div className=\"fas fa-check-square\" name=\"Checkbox\" onClick={newQuestion}></div>\n                  <div className=\"fas fa-align-left\" name=\"Paragraph\" onClick={newQuestion}></div>\n                  <div className=\"fab fa-line\" name=\"Line\" onClick={newQuestion}></div>\n        \t</div>\n      )\n}\n\nexport default AddType;\n","import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useState, useCallback } from \"react\";\nimport { sendQuestionsToApi } from \"../../redux/formSlice\";\nimport debounce  from \"../../utils/debounce\";\nimport { componentsCreate } from \"../../utils/variables\";\nimport FormHeader from \"../../components/FormHeader\";\nimport QuestionOptions from \"../../components/QuestionOptions\";\nimport AddType from \"../../components/AddType\";\n\nconst CreateForm = ({ form_id }) => {\n\n    const questions = useSelector(state => state.form.questions)\n\n    const [ open, setOpen ] = useState(false)\n    \n    const openTypes = () => setOpen(!open)\n\n    const dispatch = useDispatch()\n\n    const questForm = useCallback(debounce(() => dispatch(sendQuestionsToApi())), []);\n\n    return (\n        <section className=\"create-form\">\n\n            <FormHeader/>\n            \n            <TransitionGroup component={null}>\n            {questions?.map(quest => {\n\n                    const SpecificType = componentsCreate[quest.question_type]\n\n                    return ( \n                        <CSSTransition\n                            key={quest.question_id}\n                            classNames=\"example\"\n                            timeout={{ enter: 300, exit: 300 }}\n                        >\n                        <div className=\"question-div\">\n                            <SpecificType \n                                value={quest} \n                                saveFormQuestions={questForm}\n                            />\n                            <QuestionOptions value={quest}/>\n                        </div>\n                        </CSSTransition>\n                    )        \n            })}\n            </TransitionGroup>\n\n            <article className=\"choose-type-main\">\n                <div className=\"fas fa-plus-circle\" onClick={openTypes}></div>\n                <AddType form_id={form_id} open={open}/>\n            </article>\n    \n        </section>\n    )\n};\n\nexport default CreateForm;\n","const QuestResponse = ({ answersQuest }) => {\r\n    return (\r\n        <section className=\"responses\">\r\n        {answersQuest &&\r\n        <>\r\n            {Object.entries(answersQuest).map(answer => {\r\n                return (\r\n                    <article>\r\n                        <h2>{answer[1][0].quest_title}</h2>\r\n                        <div>\r\n                        {answer[1].map(ans => {\r\n                            return (\r\n                                <>\r\n                                <p>{ans.answer_text}</p>\r\n                                {ans.answer_array?.map(a => <p>{a}</p>)}\r\n                                </>\r\n                            )\r\n                        })}\r\n                        </div>\r\n                    </article>\r\n                )\r\n            })}\r\n        </>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default QuestResponse;\r\n","const UserResponse = ({ answersUser }) => {\r\n    return (\r\n        <section className=\"responses\">\r\n        {answersUser &&\r\n        <>\r\n            {Object.entries(answersUser).map((answer, ind) => {\r\n                return (\r\n                    <article>\r\n                        <h2>{ind+1}</h2>\r\n                        <div>\r\n                        {answer[1].map(ans => {\r\n                            return (\r\n                                <>\r\n                                <p>{ans.quest_title}:</p>\r\n                                <p>{ans.answer_text}</p>\r\n                                {ans.answer_array?.map(a => <p>{a}</p>)}\r\n                                </>\r\n                            )\r\n                        })}\r\n                        </div>\r\n                    </article>\r\n                )\r\n            })}\r\n        </>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserResponse;\r\n","import { NavLink, Switch, Route } from \"react-router-dom\";\r\nimport QuestResponse from \"../../components/QuestResponse\"\r\nimport UserResponse from \"../../components/UserResponse\"\r\n\r\nconst FormResponses = ({ answersUser, answersQuest, form_id }) => {\r\n    return (\r\n        <section>\r\n            <div className=\"nav-links\">\r\n                <NavLink \r\n                    exact activeClassName=\"selected\" \r\n                    to={{pathname:`/create_form/${form_id}/response_form`}}>\r\n                        Questions\r\n                </NavLink>\r\n                <NavLink \r\n                    exact activeClassName=\"selected\" \r\n                    to={{pathname:`/create_form/${form_id}/response_form/user`}}>\r\n                        Individuals\r\n                </NavLink>  \r\n            </div>\r\n            <Switch>\r\n                <Route exact path=\"/create_form/:id/response_form\" >\r\n                    <QuestResponse answersQuest={answersQuest} />\r\n                </Route>\r\n                <Route exact path=\"/create_form/:id/response_form/user\">\r\n                    <UserResponse answersUser={answersUser}/>\r\n                </Route>\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FormResponses;\r\n","import { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst FormOptions = ({ form_id }) => {\r\n\r\n    const { pathname } = useLocation();\r\n    \r\n    function getLink() {\r\n        navigator.clipboard.writeText(`${window.location.origin}\\\\fillout_form\\\\${form_id}`) \r\n    }\r\n\r\n    function sendToFillout() {\r\n        window.location.href = `${window.location.origin}\\\\fillout_form\\\\${form_id}`\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-options\">\r\n                <div className=\"fas fa-eye\" onClick={sendToFillout}></div>\r\n                <div className=\"fas fa-share-square\" onClick={getLink}></div>\r\n            </div>\r\n            <div className=\"nav-links\">        \r\n                <NavLink \r\n                    exact activeClassName=\"selected\" \r\n                    to={{pathname:`/create_form/${form_id}`}}>\r\n                        Form\r\n                </NavLink>\r\n                <NavLink \r\n                    isActive={() => [`/create_form/${form_id}/response_form`, \r\n                                    `/create_form/${form_id}/response_form/user`].includes(pathname)}\r\n                    to={{pathname:`/create_form/${form_id}/response_form`}}>\r\n                        Responses\r\n                </NavLink>          \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default FormOptions;\r\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  \t<main className=\"not-found\">\n    \t<h1>404 - Not Found!</h1>\n    \t<Link to=\"/\">Go Home</Link>\n  \t</main>\n);\n\nexport default NotFound;\n","export default function groupArray(array, id) {\r\n\r\n    const map = {};\r\n\r\n\tarray.forEach(element => {\r\n\t\t\t\r\n\t\tconst group = element[id];\r\n\t\t\r\n\t\tif(!map[group]) {\r\n\t\t\tmap[group] = [];\r\n\t\t}\r\n\r\n\t\tmap[group].push(element);\r\n\t});\r\n\r\n    return map;\r\n}","import CreateForm from \"./CreateForm\";\r\nimport FormResponses from \"./FormResponses\";\r\nimport FormOptions from \"../../components/FormOptions\";\r\nimport NotFound from \"../../components/NotFound\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport { getFormInfo } from \"../../redux/formSlice\"\r\nimport receiveFetch from \"../../utils/receiveFetch\"\r\nimport groupArray from \"../../utils/groupArray\";\r\n\r\nconst FormMain = () => {\r\n\r\n    const { id } = useParams()\r\n\r\n\tconst form_id = id\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => dispatch(getFormInfo({ form_id })), [])\r\n\r\n\tconst [ answersUser, setAnswersUser ] = useState();\r\n\tconst [ answersQuest, setAnswersQuest ] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await receiveFetch(\"/api/get_responses\", \"POST\", { form_id })\r\n\r\n\t\t\tsetAnswersUser(groupArray(result, \"index_id\"))\r\n\t\t\tsetAnswersQuest(groupArray(result, \"question_id\"))\r\n\t\t}\r\n\t\r\n        fetchData()\r\n    }, [])\r\n\r\n  \treturn (    \r\n        <main>\r\n        \t<FormOptions form_id={form_id} />  \r\n\r\n  \t  \t\t<Switch>\r\n  \t  \t\t\t<Route exact path=\"/create_form/:id\">\r\n\t\t\t\t\t<CreateForm form_id={form_id} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/create_form/:id/response_form\">\r\n\t\t\t\t\t<FormResponses answersUser={answersUser} answersQuest={answersQuest} form_id={form_id} />\r\n\t\t\t\t</Route>\r\n  \t  \t\t  \t<Route>\r\n\t\t\t\t\t<NotFound />\r\n\t\t\t\t</Route>\r\n  \t  \t\t</Switch>\r\n        </main>\r\n  \t);\r\n};\r\n\r\nexport default FormMain;\r\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport receiveFetch from \"../../utils/receiveFetch\"\nimport { componentsSolve } from \"../../utils/variables\";\n\nconst FilloutForm = () => {\n\n    const { id } = useParams()\n\n    const [ form, setForm ] = useState([])\n\n    useEffect(() => {\n        async function fetchData() {\n            const form_info = await receiveFetch(\"/auth/get_form_info\", \"POST\", { id })\n            setForm(form_info)\n        }\n\n        fetchData()\n    }, [])\n\n    function sendForm(e) {\n        e.preventDefault()\n        console.log(form)\n        receiveFetch(\"/auth/send_filled_form\", \"POST\", form )\n        .then(() => window.location.href = `/infopage`)\n        .catch(() => window.location.href = `/infopage`)\n    }\n\n    return (\n        <main className=\"fillout-form\">\n            \n            <header>\n                <h1>{form?.form_title}</h1>\n                <p>{form?.descrip}</p>\n            </header>\n\n            <form onSubmit={sendForm}>\n\n                {form?.questions?.map(quest => {\n\n                    const SpecificType = componentsSolve[quest.question_type]\n                \n                    return ( \n                        <div className=\"fillout-quest-div\" key={quest.question_id}>\n                            <SpecificType value={quest} />\n                        </div>\n                    )        \n                })} \n\n                <button type=\"submit\">Submit</button>\n            </form>\n        </main>\n    )\n}\n\nexport default FilloutForm;\n","const SuccessPage = ({  }) => {\r\n    return (    \r\n    \t<main>\r\n            Success\r\n      \t</main>\r\n    )\r\n}\r\n\r\nexport default SuccessPage;\r\n","import { Link } from \"react-router-dom\";\n\nconst Aside = () => {\n\n    const logOut = () => {\n        fetch(\"/auth/logout\")\n        localStorage.clear()\n        window.location.href=\"/\"\n    }\n\n    return (\n        <aside>\n            <Link to=\"/\">My Forms</Link>\n            <div onClick={logOut}>LogOut</div>\n        </aside>\n    )\n};\n\nexport default Aside;\n","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst MobileAside = () => {\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n\r\n    const openBurger = () => setOpen(!open)\r\n    \r\n    const logOut = () => {\r\n        fetch(\"/auth/logout\")\r\n        localStorage.clear()\r\n        window.location.href=\"/\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"mobile-menu\">\r\n            <div className={open ? \"burger-crossed\" : \"burger-bar\"} onClick={openBurger}>\r\n      \t        <div className=\"div1\"/>\r\n      \t        <div className=\"div2\"/>\r\n      \t        <div className=\"div3\"/>\r\n            </div>\r\n            <div className={open ? \"mobile-aside\" : \"mobile-hidden\"} >\r\n                <Link onClick={openBurger} to=\"/\">My Forms</Link>\r\n                <div onClick={openBurger} onClick={logOut}>LogOut</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileAside;\r\n","import FormList from \"./FormList\";\nimport FormMain from \"./FormMain\";\nimport FilloutForm from \"../LoggedOut/FilloutForm\";\nimport InfoPage from \"../LoggedOut/InfoPage\";\nimport Aside from \"../../components/Aside\";\nimport MobileAside from \"../../components/MobileAside\";\nimport NotFound from \"../../components/NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst LoggedIn = () => {\n  \treturn (     \n  \t  \t<main className=\"logged-in-main\">\n  \t  \t    <Aside />\n\t\t\t<MobileAside />\n  \t  \t    <Switch>\n  \t  \t      \t<Route exact path=\"/\"><FormList /></Route>\n  \t  \t    \t<Route path=\"/create_form/:id\"><FormMain /></Route>\n\t\t\t\t<Route path=\"/fillout_form/:id\"><FilloutForm /></Route>\n              \t<Route path=\"/infopage\"><InfoPage /></Route>\n  \t  \t      \t<Route><NotFound /></Route>\n  \t  \t    </Switch>\n  \t  \t</main>\n  \t);\n};\n\nexport default LoggedIn;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport receiveFetch from \"../../utils/receiveFetch\"\n\nconst Login = () => {\n\n  \tconst [ list, setList ] = useState([])\n  \tconst [ loginfo, setLoginfo ] = useState({ username:\"\", password:\"\" })\n  \tconst [ errorinfo, setErrorinfo ] = useState(\"\")\n\n  \tasync function sendLoginfo(e) {\n  \t  \te.preventDefault()\n  \t  \tconst res = await receiveFetch(\"/auth/login\", \"POST\", loginfo)\n  \t  \tif (res === loginfo.username) {\n  \t  \t  \tlocalStorage.setItem(\"user\", res)\n  \t  \t  \twindow.location.href = \"/\"\n  \t  \t} else {\n  \t  \t  \tsetErrorinfo(res.message);\n  \t  \t}\n  \t}\n\n  \tfunction handleInput(e) {\n\t\tsetLoginfo(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  \t}\n\n  \tfunction addToList(e) {\n    \tsetList(prev => [...prev, e.target.name])\n  \t}\n\n  \tfunction removeFromList(e) {\n    \tif (!e.target.value) setList(prev => [...prev].filter(x => x != e.target.name))\n  \t}\n\n  \treturn (\n\n\t\t<form className=\"auth-form\" onSubmit={sendLoginfo}>\n\t\t  \t<h1>Login</h1>\n\t\t  \t<div>\n\t\t  \t  \t<input \n\t\t  \t  \t  \tautoComplete=\"off\"\n\t\t  \t  \t  \ttype=\"text\"\n\t\t  \t  \t  \tonChange={handleInput}\n\t\t  \t  \t  \tonFocus={addToList} \n\t\t  \t  \t  \tonBlur={removeFromList}\n\t\t  \t  \t  \tname=\"username\" \n\t\t  \t  \t  \tid=\"username\"\n\t\t  \t  \t/>\n\t\t  \t  \t<label className={list.includes(\"username\") ? \"auth-label\" : null} htmlFor=\"username\">Username:</label>\n\t\t  \t</div>\n\t\t  \t<div>\n\t\t  \t  \t<input \n\t\t  \t  \t  \ttype=\"password\"\n\t\t  \t  \t  \tonFocus={addToList} \n\t\t  \t  \t  \tonChange={handleInput}\n\t\t  \t  \t  \tonBlur={removeFromList}\n\t\t  \t  \t  \tname=\"password\" \n\t\t  \t  \t  \tid=\"password\"\n\t\t  \t  \t/>\n\t\t  \t  \t<label className={list.includes(\"password\") ? \"auth-label\" : null} htmlFor=\"password\">Password:</label>\n\t\t  \t</div>\n\t\t  \t<button type=\"submit\">Login</button>\n\t\t  \t<p>{errorinfo}</p>\n\t\t  \t<Link to=\"/register\">Dont have an account? Register!</Link>\n\t\t</form>\n  \t);\n};\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport receiveFetch from \"../../utils/receiveFetch\"\n\nconst Register = () => {\n\n  \tconst [ list, setList ] = useState([])\n  \tconst [ errorinfo, setErrorinfo ] = useState(\"\")\n  \tconst [ registerInfo, setregisterInfo ] = useState({\n  \t  \tusername: \"\",\n  \t  \tpassword: \"\",\n  \t  \tconfirmpassword: \"\",\n  \t})\n\n  \tconst { password, confirmpassword } = registerInfo\n\n  \tasync function sendregisterInfo(e) {\n  \t  \te.preventDefault()\n  \t  \tif (password === confirmpassword) {\n  \t  \t  \tconst res = await receiveFetch(\"/auth/register\", \"POST\", registerInfo)\n  \t  \t  \tif (res === true) {\n  \t  \t    \twindow.location.href = \"/\"\n  \t  \t  \t} else {\n  \t  \t    \tsetErrorinfo(res.message);\n  \t  \t  \t}\n  \t  \t} else {\n  \t  \t\tsetErrorinfo(\"Passwords dont match!\")\n  \t  \t}\n  \t}\n\n  \tfunction handleInput(e) {\n  \t  \tsetregisterInfo(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  \t}\n\n  \tfunction addToList(e) {\n  \t  \tsetList(prev => [...prev, e.target.name])\n  \t}\n\n  \tfunction removeFromList(e) {\n  \t  \tif (!e.target.value) setList(prev => [...prev].filter(x => x != e.target.name))\n  \t}\n\n  \treturn (\n    \t<form className=\"auth-form\" onSubmit={sendregisterInfo}>\n    \t  \t<h1>Register</h1>\n    \t  \t<div>\n    \t  \t  \t<input \n    \t  \t  \t  \tautoComplete=\"off\"\n    \t  \t  \t  \ttype=\"text\"\n    \t  \t  \t  \tonFocus={addToList} \n    \t  \t  \t  \tonChange={handleInput}\n    \t  \t  \t  \tonBlur={removeFromList}\n    \t  \t  \t  \tname=\"username\" \n    \t  \t  \t  \tid=\"username\"\n    \t  \t  \t/>\n    \t  \t  \t<label className={list.includes(\"username\") ? \"auth-label\" : null} htmlFor=\"username\">Username:</label>\n    \t  \t</div>\n    \t  \t<div>\n    \t  \t  \t<input \n    \t  \t  \t  \ttype=\"password\"\n    \t  \t  \t  \tonFocus={addToList} \n    \t  \t  \t  \tonChange={handleInput}\n    \t  \t  \t  \tonBlur={removeFromList}\n    \t  \t  \t  \tname=\"password\" \n    \t  \t  \t  \tid=\"password\"\n    \t  \t  \t/>\n    \t  \t  \t<label className={list.includes(\"password\") ? \"auth-label\" : null} htmlFor=\"password\">Password:</label>\n    \t  \t</div>\n    \t  \t<div>\n    \t  \t  \t<input \n    \t  \t  \t  \ttype=\"password\"\n    \t  \t  \t  \tonFocus={addToList} \n    \t  \t  \t  \tonChange={handleInput}\n    \t  \t  \t  \tonBlur={removeFromList}\n    \t  \t  \t  \tname=\"confirmpassword\" \n    \t  \t  \t  \tid=\"confirmpassword\"\n    \t  \t  \t/>\n    \t  \t  \t<label className={list.includes(\"confirmpassword\") ? \"auth-label\" : null} htmlFor=\"confirmpassword\">Confirm Password:</label>\n    \t  \t</div>\n    \t  \t<button type=\"submit\">Register</button>\n    \t  \t<p>{errorinfo}</p>\n    \t  \t<Link to=\"/\">Already have an Account? Login!</Link>\n    \t</form>\n  );\n};\n\nexport default Register;\n","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <h2>Copyright@2021</h2>\r\n            <div className=\"div-down\"></div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"div-up\"></div>\r\n            <h2>Not a member yet? <Link to=\"/register\">Sign up now!</Link></h2>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;\r\n","import Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport FilloutForm from \"./FilloutForm\";\nimport InfoPage from \"./InfoPage\";\nimport Footer from \"../../components/Footer.js\";\nimport Header from \"../../components/Nav.js\";\nimport NotFound from \"../../components/NotFound.js\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst LoggedOut = () => {\n    return (\n        <main className=\"logged-out-main\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\"><Login /></Route>\n              <Route path=\"/register\"><Register /></Route>\n              <Route path=\"/fillout_form/:id\"><FilloutForm /></Route>\n              <Route path=\"/infopage\"><InfoPage /></Route>\n              <Route><NotFound /></Route>\n            </Switch>\n            <Footer />\n        </main>\n    );\n};\n\nexport default LoggedOut;\n","const Loading = () => (\n    <div className=\"loading-circle\">\n        <div/>\n    </div >\n);\n\nexport default Loading;\n","import { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport LoggedIn from \"./pages/LoggedIn/LoggedIn\";\nimport LoggedOut from \"./pages/LoggedOut/LoggedOut.js\";\nimport Loading from \"./components/Loading\"\nimport useFetchGet from \"./hooks/useFetchGet.js\";\n\nconst App = () => {\n  \n  const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n  const [ isLoading, setIsLoading ] = useState(false);\n  \n  const fetchData = useFetchGet(\"/auth/islog\")\n\n  useEffect(() => {\n    if (fetchData) {\n      localStorage.setItem(\"user\", fetchData)\n      setIsLoggedIn(true)\n      setIsLoading(true)\n    } \n    if(fetchData != undefined) {\n      setIsLoading(true)\n    }\n  }, [fetchData]);\n\n  return (\n    <BrowserRouter>\n        {isLoading ? isLoggedIn ? \n  \n          <LoggedIn />\n\n          :\n\n          <LoggedOut />\n\n          :\n\n          <Loading />\n        }\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport formSlice from \"./formSlice\"\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n       form: formSlice,\r\n    },\r\n})\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\"\nimport \"./styles/styles.css\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}