{"version":3,"sources":["hooks/useFetchGet.js","utils/receiveFetch.js","utils/sendFetch.js","pages/LoggedIn/FormList.js","utils/findMax.js","redux/formSlice.js","utils/debounce.js","utils/variables.js","components/createTypes/ParagraphType.js","components/createTypes/CheckboxType.js","components/createTypes/LineType.js","components/createTypes/RadioType.js","components/solveTypes/ParagraphType.js","components/solveTypes/CheckboxType.js","components/solveTypes/LineType.js","components/solveTypes/RadioType.js","components/FormHeader.js","components/QuestionOptions.js","pages/LoggedIn/CreateForm.js","components/QuestResponse.js","components/UserResponse.js","pages/LoggedIn/FormResponses.js","components/FormOptions.js","components/NotFound.js","pages/LoggedIn/FormMain.js","pages/LoggedOut/FilloutForm.js","components/Aside.js","components/MobileAside.js","pages/LoggedIn/LoggedIn.js","pages/LoggedOut/Login.js","pages/LoggedOut/Register.js","components/Footer.js","components/Nav.js","pages/LoggedOut/LoggedOut.js","components/Loading.js","App.js","redux/store.js","index.js"],"names":["useFetchGet","url","useState","data","setData","useEffect","fetch","then","res","json","catch","err","alert","getDataFromServer","receiveFetch","request","body_data","a","method","mode","headers","body","JSON","stringify","sendFetch","FormList","forms","setForms","fetchedData","deleteForm","e","id","target","filter","f","className","onClick","window","location","href","map","form","to","pathname","form_title","findMaxSub","array","length","max","qq_id","forEach","element","findMaxMain","question_id","getFormInfo","createAsyncThunk","payload","form_id","response","formSlice","createSlice","name","initialState","reducers","addQuestion","state","action","newQuest","questions","quest_title","question_type","sub_questions","qq_title","push","addSubQuestion","index","findIndex","q","updateQuestion","value","updateSubQuestion","index_2","deleteQuestion","deleteSubQuestion","indexElement","prev","setRequired","required","changeType","type","sendQuestionsToApi","console","log","updateForm","sendInfoToApi","descrip","extraReducers","fulfilled","actions","debounce","func","timeout","wait","args","clearTimeout","setTimeout","componentsCreate","Paragraph","dispatch","useDispatch","onChange","minRows","Checkbox","handleCheckbox","deleteCheckbox","box","Line","Radio","componentsSolve","answer_text","handleInput","includes","answer","htmlFor","types","FormHeader","info","useSelector","saveForm","useCallback","QuestionOptions","checked","CreateForm","moveRef","useRef","activeQuestion","setActiveQuestion","questForm","TransitionGroup","component","quest","SpecificType","CSSTransition","classNames","enter","exit","dataid","hasAttribute","parentNode","getAttribute","openQuestion","ref","QuestResponse","answersQuest","Object","keys","entries","ans","answer_array","UserResponse","answersUser","FormResponses","exact","activeClassName","path","FormOptions","useLocation","origin","navigator","clipboard","writeText","isActive","NotFound","FormMain","useParams","setAnswersUser","setAnswersQuest","result","fetchData","FilloutForm","setForm","form_info","onSubmit","preventDefault","Aside","localStorage","clear","MobileAside","open","setOpen","openBurger","LoggedIn","Login","list","setList","username","password","loginfo","setLoginfo","errorinfo","setErrorinfo","setItem","message","addToList","removeFromList","x","autoComplete","onFocus","onBlur","Register","confirmpassword","registerInfo","setregisterInfo","Footer","Nav","LoggedOut","Loading","App","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","undefined","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.e5c69507.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useFetchGet(url) {\n  const [data, setData] = useState();\n\n  function getDataFromServer(url) {\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => alert(\"Website down\"));\n  }\n\n  useEffect(() => getDataFromServer(url), []);\n\n  return data;\n}\n","export default async function receiveFetch(url, request, body_data) {\n  try {\n    const data = await fetch(url, {\n      method: request,\n      mode: \"cors\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body_data),\n    });\n    return data.json();\n  } catch {\n    alert(\"Website down\");\n  }\n}\n","export default function sendFetch(url, request, body_data) {\n  try {\n    fetch(url, {\n      method: request,\n      mode: \"cors\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body_data),\n    });\n  } catch {\n    alert(\"Website down\");\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetchGet from \"../../hooks/useFetchGet\";\nimport receiveFetch from \"../../utils/receiveFetch\";\nimport sendFetch from \"../../utils/sendFetch\";\n\nconst FormList = () => {\n  const [forms, setForms] = useState([]);\n\n  const fetchedData = useFetchGet(\"/api/get_forms\");\n\n  useEffect(() => {\n    if (fetchedData) setForms(fetchedData);\n  }, [fetchedData]);\n\n  function createForm() {\n    receiveFetch(\"/api/create_form\", \"POST\", {}).then(\n      (res) => (window.location.href = `/create_form/${res}`)\n    );\n  }\n\n  function deleteForm(e) {\n    sendFetch(\"/api/delete_form\", \"DELETE\", { id: e.target.id });\n    setForms(forms.filter((f) => f.id != e.target.id));\n  }\n\n  return (\n    <main className=\"form-list\">\n      <div className=\"create-new\" onClick={createForm}>\n        <p>Create New Form</p>\n      </div>\n      <article>\n        {forms?.map((form) => {\n          return (\n            <div className=\"form-div\" key={form.id}>\n              <Link to={{ pathname: `/create_form/${form.id}` }}>\n                {form.form_title}\n              </Link>\n              <div\n                className=\"far fa-trash-alt\"\n                id={form.id}\n                onClick={deleteForm}\n              ></div>\n            </div>\n          );\n        })}\n      </article>\n    </main>\n  );\n};\n\nexport default FormList;\n","export function findMaxSub(array) {\n  if (!array) return 0;\n  if (!array.length) return 0;\n\n  let max = array[0].qq_id;\n\n  array.forEach((element) => {\n    if (element.qq_id > max) max = element.qq_id;\n  });\n\n  return max + 1;\n}\n\nexport function findMaxMain(array) {\n  if (!array) return 0;\n  if (!array.length) return 0;\n\n  let max = array[0].question_id;\n\n  array.forEach((element) => {\n    if (element.question_id > max) max = element.question_id;\n  });\n\n  return max + 1;\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { findMaxMain, findMaxSub } from \"../utils/findMax\";\nimport receiveFetch from \"../utils/receiveFetch\";\nimport sendFetch from \"../utils/sendFetch\";\n\nexport const getFormInfo = createAsyncThunk(\n  \"getFormInfoAsync\",\n  async (payload) => {\n    const response = await receiveFetch(\"/api/get_form_info\", \"POST\", {\n      id: payload.form_id,\n    });\n    return { response };\n  }\n);\n\nconst formSlice = createSlice({\n  name: \"form\",\n  initialState: [],\n  reducers: {\n    addQuestion: (state, action) => {\n      const newQuest = {\n        form_id: action.payload.form_id,\n        question_id: findMaxMain(state.questions),\n        quest_title: \"Question?\",\n        question_type: action.payload.question_type,\n        sub_questions: [{ qq_id: 0, qq_title: \"Option\" }],\n      };\n\n      if (state.questions === null) state.questions = [];\n\n      state.questions.push(newQuest);\n    },\n\n    addSubQuestion: (state, action) => {\n      const index = state.questions.findIndex(\n        (q) => q.question_id === action.payload.id\n      );\n\n      const newQuest = {\n        form_id: action.payload.form_id,\n        question_id: action.payload.id,\n        qq_id: findMaxSub(state.questions[index].sub_questions),\n        qq_title: \"Option\",\n      };\n\n      if (state.questions[index].sub_questions === null)\n        state.questions[index].sub_questions = [];\n\n      state.questions[index].sub_questions.push(newQuest);\n    },\n\n    updateQuestion: (state, action) => {\n      const index = state.questions.findIndex(\n        (q) => q.question_id === action.payload.id\n      );\n      state.questions[index].quest_title = action.payload.value;\n    },\n\n    updateSubQuestion: (state, action) => {\n      const index = state.questions.findIndex(\n        (q) => q.question_id === action.payload.id\n      );\n      const index_2 = state.questions[index].sub_questions.findIndex(\n        (q) => q.qq_id == action.payload.qq_id\n      );\n      state.questions[index].sub_questions[index_2].qq_title =\n        action.payload.value;\n    },\n\n    deleteQuestion: (state, action) => {\n      sendFetch(\"/api/delete_question\", \"DELETE\", {\n        value: action.payload.value,\n      });\n      return {\n        ...state,\n        questions: state.questions.filter(\n          (q) => q.question_id != action.payload.value.question_id\n        ),\n      };\n    },\n\n    deleteSubQuestion: (state, action) => {\n      sendFetch(\"/api/delete_quest_sub\", \"DELETE\", {\n        value: action.payload.value,\n        qq_id: action.payload.qq_id,\n      });\n      const indexElement = state.questions.findIndex(\n        (q) => q.question_id === action.payload.value.question_id\n      );\n      return {\n        ...state,\n        questions: state.questions.map((prev, index) =>\n          index === indexElement\n            ? {\n                ...prev,\n                sub_questions: state.questions[\n                  indexElement\n                ].sub_questions.filter((q) => q.qq_id != action.payload.qq_id),\n              }\n            : prev\n        ),\n      };\n    },\n\n    setRequired: (state, action) => {\n      const index = state.questions.findIndex(\n        (q) => q.question_id === action.payload.id\n      );\n      state.questions[index].required = !state.questions[index].required;\n    },\n\n    changeType: (state, action) => {\n      const index = state.questions.findIndex(\n        (q) => q.question_id === action.payload.id\n      );\n      state.questions[index].question_type = action.payload.type;\n    },\n\n    sendQuestionsToApi: (state) => {\n      console.log(\"SENT\");\n      sendFetch(\"/api/update_form_questions\", \"POST\", {\n        questions: state.questions,\n      });\n    },\n\n    updateForm: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    },\n\n    sendInfoToApi: (state) => {\n      sendFetch(\"/api/update_form_main\", \"POST\", {\n        form_title: state.form_title,\n        descrip: state.descrip,\n        form_id: state.id,\n      });\n    },\n  },\n  extraReducers: {\n    [getFormInfo.fulfilled]: (state, action) => {\n      return action.payload.response;\n    },\n  },\n});\n\nexport const {\n  addQuestion,\n  updateQuestion,\n  deleteQuestion,\n  deleteSubQuestion,\n  setRequired,\n  changeType,\n  updateForm,\n  sendQuestionsToApi,\n  updateSubQuestion,\n  addSubQuestion,\n  sendInfoToApi,\n} = formSlice.actions;\n\nexport default formSlice.reducer;\n","export default function debounce(func, wait = 1000) {\n  let timeout;\n\n  return function (...args) {\n    if (timeout) clearTimeout(timeout);\n\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n","import CheckboxCreate from \"../components/createTypes/CheckboxType\";\nimport ParagraphCreate from \"../components/createTypes/ParagraphType\";\nimport LineCreate from \"../components/createTypes/LineType\";\nimport RadioCreate from \"../components/createTypes/RadioType\";\n\nimport CheckboxSolve from \"../components/solveTypes/CheckboxType\";\nimport ParagraphSolve from \"../components/solveTypes/ParagraphType\";\nimport LineSolve from \"../components/solveTypes/LineType\";\nimport RadioSolve from \"../components/solveTypes/RadioType\";\n\nexport const componentsCreate = {\n  Paragraph: ParagraphCreate,\n  Checkbox: CheckboxCreate,\n  Line: LineCreate,\n  Radio: RadioCreate,\n};\n\nexport const componentsSolve = {\n  Paragraph: ParagraphSolve,\n  Checkbox: CheckboxSolve,\n  Line: LineSolve,\n  Radio: RadioSolve,\n};\n\nexport const types = [\"Checkbox\", \"Paragraph\", \"Line\", \"Radio\"];\n","import TextareaAutosize from \"react-textarea-autosize\";\nimport { useDispatch } from \"react-redux\";\nimport { updateQuestion } from \"../../redux/formSlice\";\n\nconst ParagraphType = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleInput = (e) =>\n    dispatch(updateQuestion({ id: value.question_id, value: e.target.value }));\n\n  return (\n    <div className=\"paragraph-create\">\n      <TextareaAutosize\n        name=\"quest_title\"\n        onChange={handleInput}\n        value={value.quest_title}\n      />\n      <TextareaAutosize minRows={3} />\n    </div>\n  );\n};\n\nexport default ParagraphType;\n","import TextareaAutosize from \"react-textarea-autosize\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  updateQuestion,\n  updateSubQuestion,\n  addSubQuestion,\n  deleteSubQuestion,\n} from \"../../redux/formSlice\";\n\nconst CheckboxType = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleInput = (e) =>\n    dispatch(updateQuestion({ id: value.question_id, value: e.target.value }));\n\n  const handleCheckbox = (e) => {\n    dispatch(\n      updateSubQuestion({\n        id: value.question_id,\n        qq_id: e.target.id,\n        value: e.target.value,\n      })\n    );\n  };\n\n  const handleAdd = () =>\n    dispatch(addSubQuestion({ id: value.question_id, form_id: value.form_id }));\n\n  const deleteCheckbox = (e) =>\n    dispatch(deleteSubQuestion({ value, qq_id: e.target.id }));\n\n  return (\n    <div className=\"checkbox-create\">\n      <TextareaAutosize\n        onChange={handleInput}\n        name=\"quest_title\"\n        value={value.quest_title}\n      />\n      {value?.sub_questions?.map((box) => {\n        return (\n          <div className=\"check-box\" key={box.qq_id}>\n            <div>\n              <input className=\"check\" type=\"checkbox\" value={box.qq_title} />\n              <input\n                type=\"text\"\n                className=\"check-input\"\n                id={box.qq_id}\n                onChange={handleCheckbox}\n                value={box.qq_title}\n              />\n            </div>\n            <div\n              id={box.qq_id}\n              onClick={deleteCheckbox}\n              className=\"fas fa-times\"\n            ></div>\n          </div>\n        );\n      })}\n      <div className=\"check-box\" onClick={handleAdd}>\n        <div>\n          <span className=\"fas fa-plus\"></span>\n          <span className=\"new-option\">\n            <p>Another Option...</p>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckboxType;\n","import TextareaAutosize from \"react-textarea-autosize\";\nimport { useDispatch } from \"react-redux\";\nimport { updateQuestion } from \"../../redux/formSlice\";\n\nconst LineType = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleInput = (e) =>\n    dispatch(updateQuestion({ id: value.question_id, value: e.target.value }));\n\n  return (\n    <div className=\"line-create\">\n      <TextareaAutosize\n        name=\"quest_title\"\n        onChange={handleInput}\n        value={value.quest_title}\n      />\n      <input />\n    </div>\n  );\n};\n\nexport default LineType;\n","import TextareaAutosize from \"react-textarea-autosize\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  updateQuestion,\n  updateSubQuestion,\n  addSubQuestion,\n  deleteSubQuestion,\n} from \"../../redux/formSlice\";\n\nconst LineType = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleInput = (e) =>\n    dispatch(updateQuestion({ id: value.question_id, value: e.target.value }));\n\n  const handleCheckbox = (e) => {\n    dispatch(\n      updateSubQuestion({\n        id: value.question_id,\n        qq_id: e.target.id,\n        value: e.target.value,\n      })\n    );\n  };\n\n  const handleAdd = () =>\n    dispatch(addSubQuestion({ id: value.question_id, form_id: value.form_id }));\n\n  const deleteCheckbox = (e) =>\n    dispatch(deleteSubQuestion({ value, qq_id: e.target.id }));\n\n  return (\n    <div className=\"checkbox-create\">\n      <TextareaAutosize\n        onChange={handleInput}\n        name=\"quest_title\"\n        value={value.quest_title}\n      />\n      {value?.sub_questions?.map((box) => {\n        return (\n          <div className=\"check-box\" key={box.qq_id}>\n            <div>\n              <input\n                className=\"radio\"\n                type=\"radio\"\n                value={box.qq_title}\n                id={box.qq_title}\n                name={value.question_id}\n              />\n              <input\n                type=\"text\"\n                className=\"check-input\"\n                id={box.qq_id}\n                onChange={handleCheckbox}\n                value={box.qq_title}\n              />\n            </div>\n            <div\n              id={box.qq_id}\n              onClick={deleteCheckbox}\n              className=\"fas fa-times\"\n            ></div>\n          </div>\n        );\n      })}\n      <div className=\"check-box\" onClick={handleAdd}>\n        <div>\n          <span className=\"fas fa-plus\"></span>\n          <span className=\"new-option\">\n            <p>Another Option...</p>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LineType;\n","import TextareaAutosize from \"react-textarea-autosize\";\n\nconst ParagraphType = ({ value }) => {\n  const handleInput = (e) => (value.answer_text = e.target.value);\n\n  return (\n    <>\n      <div>{value.quest_title}</div>\n      <TextareaAutosize minRows={3} onChange={handleInput} />\n    </>\n  );\n};\n\nexport default ParagraphType;\n","const CheckboxType = ({ value }) => {\n  const handleInput = (e) => {\n    if (!value[\"answer_array\"]) value[\"answer_array\"] = [];\n    if (value[\"answer_array\"].includes(e.target.value)) {\n      value[\"answer_array\"] = value[\"answer_array\"].filter(\n        (answer) => answer != e.target.value\n      );\n    } else value[\"answer_array\"].push(e.target.value);\n  };\n\n  return (\n    <>\n      <h2>{value.quest_title}</h2>\n      {value?.sub_questions?.map((box) => {\n        return (\n          <div className=\"check-box\" key={box.qq_id}>\n            <input\n              onChange={handleInput}\n              type=\"checkbox\"\n              id={box.qq_id + \"\" + box.question_id}\n              value={box.qq_title}\n            />\n            <label htmlFor={box.qq_id + \"\" + box.question_id}>\n              {box.qq_title}\n            </label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default CheckboxType;\n","const LineType = ({ value }) => {\n  const handleInput = (e) => (value.answer_text = e.target.value);\n\n  return (\n    <>\n      <div>{value.quest_title}</div>\n      <input type=\"text\" onChange={handleInput} />\n    </>\n  );\n};\n\nexport default LineType;\n","const RadioType = ({ value }) => {\n  const handleInput = (e) => (value.answer_text = e.target.value);\n\n  return (\n    <>\n      <h2>{value.quest_title}</h2>\n      {value?.sub_questions?.map((box) => {\n        return (\n          <div className=\"check-box\" key={box.qq_id}>\n            <input\n              onChange={handleInput}\n              type=\"radio\"\n              id={box.qq_id + \"\" + box.question_id}\n              value={box.qq_title}\n              name={value.question_id}\n            />\n            <label htmlFor={box.qq_id + \"\" + box.question_id}>\n              {box.qq_title}\n            </label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default RadioType;\n","import TextareaAutosize from \"react-textarea-autosize\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport debounce from \"../utils/debounce\";\nimport { useCallback } from \"react\";\nimport { sendInfoToApi, updateForm } from \"../redux/formSlice\";\n\nconst FormHeader = () => {\n  const dispatch = useDispatch();\n\n  const info = useSelector((state) => state.form);\n\n  const saveForm = useCallback(\n    debounce(() => dispatch(sendInfoToApi())),\n    []\n  );\n\n  const handleInput = (e) =>\n    dispatch(updateForm({ name: e.target.name, value: e.target.value }));\n\n  return (\n    <header className=\"form-header\" onChange={saveForm}>\n      <TextareaAutosize\n        onChange={handleInput}\n        name=\"form_title\"\n        value={info.form_title}\n      />\n      <TextareaAutosize\n        onChange={handleInput}\n        name=\"descrip\"\n        value={info.descrip || \"\"}\n        minRows={3}\n      />\n    </header>\n  );\n};\n\nexport default FormHeader;\n","import { useDispatch } from \"react-redux\";\nimport { deleteQuestion, changeType, setRequired } from \"../redux/formSlice\";\nimport { types } from \"../utils/variables\";\n\nconst QuestionOptions = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const toDeleteQuestions = () => dispatch(deleteQuestion({ value }));\n\n  const toSetRequired = () => dispatch(setRequired({ id: value.question_id }));\n\n  const toChangeType = (e) =>\n    dispatch(changeType({ id: value.question_id, type: e.target.value }));\n\n  return (\n    <div className=\"question-options\">\n      <div className=\"far fa-trash-alt\" onClick={toDeleteQuestions}></div>\n      <div className=\"required\">\n        <label htmlFor=\"required\">Required</label>\n        <input\n          checked={value.required}\n          id=\"required\"\n          type=\"checkbox\"\n          className=\"checkbox-fake\"\n          onClick={toSetRequired}\n        />\n      </div>\n      <div>\n        <select\n          value={value.question_type}\n          onChange={toChangeType}\n          name=\"type\"\n          id=\"type\"\n        >\n          {types.map((type) => (\n            <option key={type} value={type}>\n              {type}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionOptions;\n","import { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useCallback, useRef } from \"react\";\nimport { sendQuestionsToApi, addQuestion } from \"../../redux/formSlice\";\nimport debounce from \"../../utils/debounce\";\nimport { componentsCreate } from \"../../utils/variables\";\nimport FormHeader from \"../../components/FormHeader\";\nimport QuestionOptions from \"../../components/QuestionOptions\";\n\nconst CreateForm = ({ form_id }) => {\n  const moveRef = useRef();\n\n  const dispatch = useDispatch();\n\n  const questions = useSelector((state) => state.form.questions);\n\n  const [activeQuestion, setActiveQuestion] = useState();\n\n  function newQuestion() {\n    dispatch(addQuestion({ question_type: \"Line\", form_id }));\n  }\n\n  const questForm = useCallback(\n    debounce(() => dispatch(sendQuestionsToApi())),\n    []\n  );\n\n  function openQuestion(e) {\n    while (!e.target.hasAttribute(\"dataid\")) {\n      e.target = e.target.parentNode;\n    }\n    setActiveQuestion(e.target.getAttribute(\"dataid\"));\n  }\n\n  return (\n    <section className=\"create-form\">\n      <FormHeader />\n\n      <TransitionGroup component={null}>\n        {questions?.map((quest) => {\n          const SpecificType = componentsCreate[quest.question_type];\n\n          return (\n            <CSSTransition\n              key={quest.question_id}\n              classNames=\"example\"\n              timeout={{ enter: 300, exit: 300 }}\n            >\n              <div\n                dataid={quest.question_id}\n                onClick={(e) => {\n                  questForm();\n                  openQuestion(e);\n                }}\n                onChange={questForm}\n                className=\"question-div\"\n              >\n                <SpecificType value={quest} />\n                {activeQuestion == quest.question_id && (\n                  <QuestionOptions value={quest} />\n                )}\n              </div>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n\n      <span ref={moveRef} className=\"choose-type-main\" onClick={questForm}>\n        <div className=\"fas fa-plus-circle\" onClick={newQuestion}></div>\n      </span>\n    </section>\n  );\n};\n\nexport default CreateForm;\n","const QuestResponse = ({ answersQuest }) => {\n  return (\n    <section className=\"responses\">\n      {answersQuest && Object.keys(answersQuest).length ? (\n        <>\n          {Object.entries(answersQuest).map((answer, index) => {\n            return (\n              <article key={index}>\n                <h2>{answer[1][0].quest_title}</h2>\n                <div>\n                  {answer[1].map((ans) => {\n                    return (\n                      <>\n                        <p>{ans.answer_text}</p>\n                        {ans.answer_array?.map((a) => (\n                          <p>{a}</p>\n                        ))}\n                      </>\n                    );\n                  })}\n                </div>\n              </article>\n            );\n          })}\n        </>\n      ) : (\n        <p>No answers yet!</p>\n      )}\n    </section>\n  );\n};\n\nexport default QuestResponse;\n","const UserResponse = ({ answersUser }) => {\n  return (\n    <section className=\"responses\">\n      {answersUser && Object.keys(answersUser).length ? (\n        <>\n          {Object.entries(answersUser).map((answer, index) => {\n            return (\n              <article key={index}>\n                <h2>{index + 1}</h2>\n                <div>\n                  {answer[1].map((ans) => {\n                    return (\n                      <>\n                        <p>{ans.quest_title}:</p>\n                        <p>{ans.answer_text}</p>\n                        {ans.answer_array?.map((a) => (\n                          <p>{a}</p>\n                        ))}\n                      </>\n                    );\n                  })}\n                </div>\n              </article>\n            );\n          })}\n        </>\n      ) : (\n        <p>No answers yet!</p>\n      )}\n    </section>\n  );\n};\n\nexport default UserResponse;\n","import { NavLink, Switch, Route } from \"react-router-dom\";\nimport QuestResponse from \"../../components/QuestResponse\";\nimport UserResponse from \"../../components/UserResponse\";\n\nconst FormResponses = ({ answersUser, answersQuest, form_id }) => {\n  return (\n    <section>\n      <div className=\"nav-links\">\n        <NavLink\n          exact\n          activeClassName=\"selected\"\n          to={{ pathname: `/create_form/${form_id}/response_form` }}\n        >\n          Questions\n        </NavLink>\n        <NavLink\n          exact\n          activeClassName=\"selected\"\n          to={{ pathname: `/create_form/${form_id}/response_form/user` }}\n        >\n          Individuals\n        </NavLink>\n      </div>\n      <Switch>\n        <Route exact path=\"/create_form/:id/response_form\">\n          <QuestResponse answersQuest={answersQuest} />\n        </Route>\n        <Route exact path=\"/create_form/:id/response_form/user\">\n          <UserResponse answersUser={answersUser} />\n        </Route>\n      </Switch>\n    </section>\n  );\n};\n\nexport default FormResponses;\n","import { NavLink, useLocation } from \"react-router-dom\";\n\nconst FormOptions = ({ form_id }) => {\n  const { pathname } = useLocation();\n\n  function getLink() {\n    navigator.clipboard.writeText(\n      `${window.location.origin}\\\\fillout_form\\\\${form_id}`\n    );\n  }\n\n  function sendToFillout() {\n    window.location.href = `${window.location.origin}\\\\fillout_form\\\\${form_id}`;\n  }\n\n  return (\n    <nav>\n      <div className=\"nav-options\">\n        <div className=\"fas fa-eye\" onClick={sendToFillout}></div>\n        <div className=\"fas fa-share-square\" onClick={getLink}></div>\n      </div>\n      <div className=\"nav-links\">\n        <NavLink\n          exact\n          activeClassName=\"selected\"\n          to={{ pathname: `/create_form/${form_id}` }}\n        >\n          Form\n        </NavLink>\n        <NavLink\n          isActive={() =>\n            [\n              `/create_form/${form_id}/response_form`,\n              `/create_form/${form_id}/response_form/user`,\n            ].includes(pathname)\n          }\n          to={{ pathname: `/create_form/${form_id}/response_form` }}\n        >\n          Responses\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default FormOptions;\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  <main className=\"not-found\">\n    <h1>404 - Not Found!</h1>\n    <Link to=\"/\">Go Home</Link>\n  </main>\n);\n\nexport default NotFound;\n","import CreateForm from \"./CreateForm\";\nimport FormResponses from \"./FormResponses\";\nimport FormOptions from \"../../components/FormOptions\";\nimport NotFound from \"../../components/NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getFormInfo } from \"../../redux/formSlice\";\nimport receiveFetch from \"../../utils/receiveFetch\";\n\nconst FormMain = () => {\n  const { id } = useParams();\n\n  const form_id = id;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getFormInfo({ form_id })), []);\n\n  const [answersUser, setAnswersUser] = useState();\n  const [answersQuest, setAnswersQuest] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await receiveFetch(\"/api/get_responses\", \"POST\", {\n        form_id,\n      });\n      setAnswersUser(result[0]);\n      setAnswersQuest(result[1]);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <FormOptions form_id={form_id} />\n\n      <Switch>\n        <Route exact path=\"/create_form/:id\">\n          <CreateForm form_id={form_id} />\n        </Route>\n        <Route path=\"/create_form/:id/response_form\">\n          <FormResponses\n            answersUser={answersUser}\n            answersQuest={answersQuest}\n            form_id={form_id}\n          />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </main>\n  );\n};\n\nexport default FormMain;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport receiveFetch from \"../../utils/receiveFetch\";\nimport { componentsSolve } from \"../../utils/variables\";\n\nconst FilloutForm = () => {\n  const { id } = useParams();\n\n  const [form, setForm] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const form_info = await receiveFetch(\"/auth/get_form_info\", \"POST\", {\n        id,\n      });\n      setForm(form_info);\n    }\n\n    fetchData();\n  }, []);\n\n  function sendForm(e) {\n    e.preventDefault();\n    console.log(form);\n    receiveFetch(\"/auth/send_filled_form\", \"POST\", form)\n      .then(() => (window.location.href = `/`))\n      .catch(() => (window.location.href = `/`));\n  }\n\n  return (\n    <main className=\"fillout-form\">\n      <header>\n        <h1>{form?.form_title}</h1>\n        <p>{form?.descrip}</p>\n      </header>\n\n      <form onSubmit={sendForm}>\n        {form?.questions?.map((quest) => {\n          const SpecificType = componentsSolve[quest.question_type];\n\n          return (\n            <div className=\"fillout-quest-div\" key={quest.question_id}>\n              <SpecificType value={quest} />\n            </div>\n          );\n        })}\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </main>\n  );\n};\n\nexport default FilloutForm;\n","import { Link } from \"react-router-dom\";\n\nconst Aside = () => {\n  const logOut = () => {\n    fetch(\"/auth/logout\");\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n\n  return (\n    <aside>\n      <Link to=\"/\">My Forms</Link>\n      <div onClick={logOut}>LogOut</div>\n    </aside>\n  );\n};\n\nexport default Aside;\n","import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst MobileAside = () => {\n  const [open, setOpen] = useState(false);\n\n  const openBurger = () => setOpen(!open);\n\n  const logOut = () => {\n    fetch(\"/auth/logout\");\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n\n  return (\n    <div className=\"mobile-menu\">\n      <div className={open ? \"burger crossed\" : \"burger\"} onClick={openBurger}>\n        <div className=\"div1\" />\n        <div className=\"div2\" />\n        <div className=\"div3\" />\n      </div>\n      <div className={open ? \"mobile-aside\" : \"mobile-aside hidden\"}>\n        <Link onClick={openBurger} to=\"/\">\n          My Forms\n        </Link>\n        <a href=\"#\" onClick={logOut}>\n          LogOut\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileAside;\n","import FormList from \"./FormList\";\nimport FormMain from \"./FormMain\";\nimport FilloutForm from \"../LoggedOut/FilloutForm\";\nimport Aside from \"../../components/Aside\";\nimport MobileAside from \"../../components/MobileAside\";\nimport NotFound from \"../../components/NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst LoggedIn = () => {\n  return (\n    <main className=\"logged-in-main\">\n      <Aside />\n      <MobileAside />\n      <Switch>\n        <Route exact path=\"/\">\n          <FormList />\n        </Route>\n        <Route path=\"/create_form/:id\">\n          <FormMain />\n        </Route>\n        <Route path=\"/fillout_form/:id\">\n          <FilloutForm />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </main>\n  );\n};\n\nexport default LoggedIn;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport receiveFetch from \"../../utils/receiveFetch\";\n\nconst Login = () => {\n  const [list, setList] = useState([]);\n  const [loginfo, setLoginfo] = useState({ username: \"\", password: \"\" });\n  const [errorinfo, setErrorinfo] = useState(\"\");\n\n  async function sendLoginfo(e) {\n    e.preventDefault();\n    const res = await receiveFetch(\"/auth/login\", \"POST\", loginfo);\n    if (res === loginfo.username) {\n      localStorage.setItem(\"user\", res);\n      window.location.href = \"/\";\n    } else {\n      setErrorinfo(res.message);\n    }\n  }\n\n  function handleInput(e) {\n    setLoginfo((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  }\n\n  function addToList(e) {\n    setList((prev) => [...prev, e.target.name]);\n  }\n\n  function removeFromList(e) {\n    if (!e.target.value)\n      setList((prev) => [...prev].filter((x) => x != e.target.name));\n  }\n\n  return (\n    <form className=\"auth-form\" onSubmit={sendLoginfo}>\n      <h1>Login</h1>\n      <div>\n        <input\n          autoComplete=\"off\"\n          type=\"text\"\n          onChange={handleInput}\n          onFocus={addToList}\n          onBlur={removeFromList}\n          name=\"username\"\n          id=\"username\"\n        />\n        <label\n          className={list.includes(\"username\") ? \"auth-label\" : null}\n          htmlFor=\"username\"\n        >\n          Username:\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"password\"\n          onFocus={addToList}\n          onChange={handleInput}\n          onBlur={removeFromList}\n          name=\"password\"\n          id=\"password\"\n        />\n        <label\n          className={list.includes(\"password\") ? \"auth-label\" : null}\n          htmlFor=\"password\"\n        >\n          Password:\n        </label>\n      </div>\n      <button type=\"submit\">Login</button>\n      <p>{errorinfo}</p>\n      <Link to=\"/register\">Dont have an account? Register!</Link>\n    </form>\n  );\n};\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport receiveFetch from \"../../utils/receiveFetch\";\n\nconst Register = () => {\n  const [list, setList] = useState([]);\n  const [errorinfo, setErrorinfo] = useState(\"\");\n  const [registerInfo, setregisterInfo] = useState({\n    username: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n  });\n\n  const { password, confirmpassword } = registerInfo;\n\n  async function sendregisterInfo(e) {\n    e.preventDefault();\n    if (password === confirmpassword) {\n      const res = await receiveFetch(\"/auth/register\", \"POST\", registerInfo);\n      if (res === true) {\n        window.location.href = \"/\";\n      } else {\n        setErrorinfo(res.message);\n      }\n    } else {\n      setErrorinfo(\"Passwords dont match!\");\n    }\n  }\n\n  function handleInput(e) {\n    setregisterInfo((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  }\n\n  function addToList(e) {\n    setList((prev) => [...prev, e.target.name]);\n  }\n\n  function removeFromList(e) {\n    if (!e.target.value)\n      setList((prev) => [...prev].filter((x) => x != e.target.name));\n  }\n\n  return (\n    <form className=\"auth-form\" onSubmit={sendregisterInfo}>\n      <h1>Register</h1>\n      <div>\n        <input\n          autoComplete=\"off\"\n          type=\"text\"\n          onFocus={addToList}\n          onChange={handleInput}\n          onBlur={removeFromList}\n          name=\"username\"\n          id=\"username\"\n        />\n        <label\n          className={list.includes(\"username\") ? \"auth-label\" : null}\n          htmlFor=\"username\"\n        >\n          Username:\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"password\"\n          onFocus={addToList}\n          onChange={handleInput}\n          onBlur={removeFromList}\n          name=\"password\"\n          id=\"password\"\n        />\n        <label\n          className={list.includes(\"password\") ? \"auth-label\" : null}\n          htmlFor=\"password\"\n        >\n          Password:\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"password\"\n          onFocus={addToList}\n          onChange={handleInput}\n          onBlur={removeFromList}\n          name=\"confirmpassword\"\n          id=\"confirmpassword\"\n        />\n        <label\n          className={list.includes(\"confirmpassword\") ? \"auth-label\" : null}\n          htmlFor=\"confirmpassword\"\n        >\n          Confirm Password:\n        </label>\n      </div>\n      <button type=\"submit\">Register</button>\n      <p>{errorinfo}</p>\n      <Link to=\"/\">Already have an Account? Login!</Link>\n    </form>\n  );\n};\n\nexport default Register;\n","const Footer = () => {\n  return (\n    <footer className=\"landing-background\">\n      <a href=\"https://github.com/ivanbakotin\">Github</a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"landing-background\">\n      <h1>Create your forms quick and easy!</h1>\n      <h2>\n        Not a member yet? <Link to=\"/register\">Sign up now!</Link>\n      </h2>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport FilloutForm from \"./FilloutForm\";\nimport Footer from \"../../components/Footer.js\";\nimport Header from \"../../components/Nav.js\";\nimport NotFound from \"../../components/NotFound.js\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst LoggedOut = () => {\n  return (\n    <main className=\"logged-out-main\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/fillout_form/:id\">\n          <FilloutForm />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n      <Footer />\n    </main>\n  );\n};\n\nexport default LoggedOut;\n","const Loading = () => (\n  <div className=\"loading-circle\">\n    <div />\n  </div>\n);\n\nexport default Loading;\n","import { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport LoggedIn from \"./pages/LoggedIn/LoggedIn\";\nimport LoggedOut from \"./pages/LoggedOut/LoggedOut.js\";\nimport Loading from \"./components/Loading\";\nimport useFetchGet from \"./hooks/useFetchGet.js\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useFetchGet(\"/auth/islog\");\n\n  useEffect(() => {\n    if (fetchData) {\n      localStorage.setItem(\"user\", fetchData);\n      setIsLoggedIn(true);\n      setIsLoading(true);\n    }\n    if (fetchData != undefined) {\n      setIsLoading(true);\n    }\n  }, [fetchData]);\n\n  return (\n    <BrowserRouter>\n      {isLoading ? isLoggedIn ? <LoggedIn /> : <LoggedOut /> : <Loading />}\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport formSlice from \"./formSlice\";\n\nexport default configureStore({\n  reducer: {\n    form: formSlice,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}