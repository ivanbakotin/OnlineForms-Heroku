{"version":3,"sources":["hooks/useFetchGet.js","utils/receiveFetch.js","utils/sendFetch.js","pages/LoggedIn/FormList.js","utils/findMax.js","redux/formSlice.js","utils/debounce.js","utils/variables.js","components/createTypes/ParagraphType.js","components/createTypes/CheckboxType.js","components/createTypes/LineType.js","components/createTypes/RadioType.js","components/solveTypes/ParagraphType.js","components/solveTypes/CheckboxType.js","components/solveTypes/LineType.js","components/solveTypes/RadioType.js","components/FormHeader.js","components/QuestionOptions.js","components/AddType.js","pages/LoggedIn/CreateForm.js","components/QuestResponse.js","components/UserResponse.js","pages/LoggedIn/FormResponses.js","components/FormOptions.js","components/NotFound.js","utils/groupArray.js","pages/LoggedIn/FormMain.js","pages/LoggedOut/FilloutForm.js","components/Aside.js","components/MobileAside.js","pages/LoggedIn/LoggedIn.js","pages/LoggedOut/Login.js","pages/LoggedOut/Register.js","components/Footer.js","components/Nav.js","pages/LoggedOut/LoggedOut.js","components/Loading.js","App.js","redux/store.js","index.js"],"names":["useFetchGet","url","useState","data","setData","useEffect","fetch","then","res","json","catch","err","alert","getDataFromServer","receiveFetch","request","body_data","a","method","mode","headers","body","JSON","stringify","sendFetch","FormList","forms","setForms","fetchedData","deleteForm","e","id","target","filter","f","className","onClick","window","location","href","map","form","to","pathname","form_title","findMaxSub","array","length","max","qq_id","forEach","element","findMaxMain","question_id","getFormInfo","createAsyncThunk","payload","form_id","response","formSlice","createSlice","name","initialState","reducers","addQuestion","state","action","newQuest","questions","quest_title","question_type","sub_questions","qq_title","push","addSubQuestion","index","findIndex","q","updateQuestion","value","updateSubQuestion","index_2","deleteQuestion","deleteSubQuestion","indexElement","prev","setRequired","required","changeType","type","sendQuestionsToApi","console","log","updateForm","sendInfoToApi","descrip","extraReducers","fulfilled","actions","debounce","func","timeout","wait","args","clearTimeout","setTimeout","componentsCreate","Paragraph","dispatch","useDispatch","onChange","minRows","Checkbox","handleCheckbox","deleteCheckbox","box","placeholder","Line","Radio","componentsSolve","answer_text","handleInput","includes","answer","htmlFor","types","FormHeader","info","useSelector","saveForm","useCallback","QuestionOptions","checked","AddType","open","newQuestion","getAttribute","CreateForm","setOpen","questForm","TransitionGroup","component","quest","SpecificType","CSSTransition","classNames","enter","exit","QuestResponse","answersQuest","Object","entries","ans","answer_array","UserResponse","answersUser","ind","FormResponses","exact","activeClassName","path","FormOptions","useLocation","origin","navigator","clipboard","writeText","isActive","NotFound","groupArray","group","FormMain","useParams","setAnswersUser","setAnswersQuest","result","fetchData","FilloutForm","setForm","form_info","onSubmit","preventDefault","Aside","localStorage","clear","MobileAside","openBurger","LoggedIn","Login","list","setList","username","password","loginfo","setLoginfo","errorinfo","setErrorinfo","setItem","message","addToList","removeFromList","x","autoComplete","onFocus","onBlur","Register","confirmpassword","registerInfo","setregisterInfo","Footer","Nav","LoggedOut","Loading","App","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","undefined","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7500c6b3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport default function useFetchGet(url) {\n    const [ data, setData ] = useState()\n\n    function getDataFromServer(url) {\n        fetch(url)\n        .then(res => res.json())\n        .then(res => setData(res))\n        .catch(err => alert(\"Website down\"))\n    }\n\n    useEffect(() => getDataFromServer(url), [])\n\n    return data\n};\n","export default async function receiveFetch(url, request, body_data) {\n    try {\n        const data = await fetch(url, {\n            method: request,\n            mode: \"cors\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(body_data)\n        })  \n        return data.json()\n    } catch {\n        alert(\"Website down\")\n    }\n}\n","export default function sendFetch(url, request, body_data) {\n    try {\n        fetch(url, {\n            method: request,\n            mode: \"cors\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(body_data)\n        })  \n    } catch {\n        alert(\"Website down\")\n    }\n}\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport useFetchGet from \"../../hooks/useFetchGet\";\nimport receiveFetch from \"../../utils/receiveFetch\"\nimport sendFetch from \"../../utils/sendFetch\"\n\nconst FormList = () => {\n\n    const [ forms, setForms ] = useState([]) \n\n    const fetchedData = useFetchGet(\"/api/get_forms\")\n\n    useEffect(() => {\n        if (fetchedData) setForms(fetchedData)\n    }, [fetchedData])\n\n    function createForm() {\n        receiveFetch(\"/api/create_form\", \"POST\", {})\n        .then(res => window.location.href = `/create_form/${res}`)\n    }\n\n    function deleteForm(e) {\n        sendFetch(\"/api/delete_form\", \"DELETE\", { id: e.target.id })\n        setForms(forms.filter(f => f.id != e.target.id))\n    }\n\n    return (\n        <main className=\"form-list\">\n            <div className=\"create-new\" onClick={createForm}>\n                <p>Create New Form</p>\n            </div>\n            <article>\n            {forms?.map(form => {\n                return (\n                    <div className=\"form-div\" key={form.id}>\n                        <Link to={{pathname:`/create_form/${form.id}`}}>\n                            {form.form_title}\n                        </Link>\n                        <div className=\"far fa-trash-alt\" id={form.id} onClick={deleteForm}></div>\n                    </div>\n                )\n            })\n            }\n            </article>\n        </main>\n    )\n};\n\nexport default FormList;\n","export function findMaxSub(array) {\n\n    if (!array) return 0\n    if (!array.length) return 0\n\n    let max = array[0].qq_id\n    \n    array.forEach(element => {\n        if (element.qq_id > max) max = element.qq_id\n    })\n\n    return max + 1\n}\n\nexport function findMaxMain(array) {\n\n    if (!array) return 0\n    if (!array.length) return 0\n\n    let max = array[0].question_id\n    \n    array.forEach(element => {\n        if (element.question_id > max) max = element.question_id\n    })\n\n    return max + 1\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { findMaxMain, findMaxSub } from \"../utils/findMax\"\nimport receiveFetch from \"../utils/receiveFetch\"\nimport sendFetch from \"../utils/sendFetch\"\n\nexport const getFormInfo = createAsyncThunk(\n    \"getFormInfoAsync\",\n    async (payload) => {\n        const response = await receiveFetch(\"/api/get_form_info\", \"POST\", { id: payload.form_id })\n        return { response }\n    }\n)\n\nconst formSlice = createSlice({\n    name: \"form\",\n    initialState: [],\n    reducers: {\n        addQuestion: ( state, action ) => {\n            const newQuest = {\n                form_id: action.payload.form_id,\n                question_id: findMaxMain(state.questions), \n                quest_title: \"Question?\", \n                question_type: action.payload.question_type,\n                sub_questions: [{ qq_id: 0, qq_title: \"Option\" }],\n            };\n\n            if (state.questions === null) state.questions = []\n\n            state.questions.push(newQuest)\n        },\n\n        addSubQuestion: ( state, action ) => {\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\n\n            const newQuest = {\n                form_id: action.payload.form_id,\n                question_id: action.payload.id,\n                qq_id: findMaxSub(state.questions[index].sub_questions), \n                qq_title: \"Option\", \n            };\n            \n            if (state.questions[index].sub_questions === null) state.questions[index].sub_questions = []\n\n            state.questions[index].sub_questions.push(newQuest)\n        },\n\n        updateQuestion: ( state, action ) => {\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\n            state.questions[index].quest_title = action.payload.value\n        },\n\n        updateSubQuestion: ( state, action ) => {\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\n            const index_2 = state.questions[index].sub_questions.findIndex(q => q.qq_id == action.payload.qq_id)\n            state.questions[index].sub_questions[index_2].qq_title = action.payload.value\n        },\n\n        deleteQuestion: ( state, action ) => {\n            sendFetch(\"/api/delete_question\", \"DELETE\", { value: action.payload.value })\n            return { ...state, questions: state.questions.filter(q => q.question_id != action.payload.value.question_id)}\n        },\n\n        deleteSubQuestion: ( state, action ) => {\n\n            sendFetch(\"/api/delete_quest_sub\", \"DELETE\", { value: action.payload.value, qq_id: action.payload.qq_id })\n            const indexElement = state.questions.findIndex(q => q.question_id === action.payload.value.question_id)\n            return  {...state,\n            questions: state.questions.map((prev, index) =>\n                index === indexElement ? { ...prev, sub_questions: state.questions[indexElement].sub_questions.filter(q => q.qq_id != action.payload.qq_id) } : prev,\n            )}\n        },\n\n        setRequired: ( state, action ) => {\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\n            state.questions[index].required = !state.questions[index].required\n        },\n\n        changeType: ( state, action ) => {\n            const index = state.questions.findIndex(q => q.question_id === action.payload.id)\n            state.questions[index].question_type = action.payload.type\n        },\n        \n        sendQuestionsToApi: ( state ) => {\n            console.log(\"SENT\")\n            sendFetch(\"/api/update_form_questions\", \"POST\", { questions: state.questions })\n        },\n\n        updateForm: ( state, action ) => {\n            state[action.payload.name] = action.payload.value\n        },\n\n        sendInfoToApi: ( state ) => {\n            sendFetch(\"/api/update_form_main\", \"POST\", { form_title: state.form_title, descrip: state.descrip, form_id : state.id })\n        },\n    },\n    extraReducers: {\n        [getFormInfo.fulfilled]: ( state, action ) => {\n            return action.payload.response\n        }\n    }\n})\n\nexport const { \n        addQuestion, \n        updateQuestion,\n        deleteQuestion,\n        deleteSubQuestion,\n        setRequired,\n        changeType,\n        updateForm,\n        sendQuestionsToApi,\n        updateSubQuestion,\n        addSubQuestion,\n        sendInfoToApi,\n    } = formSlice.actions;\n\nexport default formSlice.reducer;\n","export default function debounce(func, wait = 1000) {\n    \n    let timeout;\n\n    return function (...args) {\n\n      if (timeout) clearTimeout(timeout)\n      \n      timeout = setTimeout(() => func(...args), wait)\n    }\n}\n","import CheckboxCreate from \"../components/createTypes/CheckboxType\"\nimport ParagraphCreate from \"../components/createTypes/ParagraphType\"\nimport LineCreate from \"../components/createTypes/LineType\"\nimport RadioCreate from \"../components/createTypes/RadioType\"\n\nimport CheckboxSolve from \"../components/solveTypes/CheckboxType\"\nimport ParagraphSolve from \"../components/solveTypes/ParagraphType\"\nimport LineSolve from \"../components/solveTypes/LineType\"\nimport RadioSolve from \"../components/solveTypes/RadioType\"\n\nexport const componentsCreate = {\n    Paragraph: ParagraphCreate,\n    Checkbox: CheckboxCreate,\n    Line: LineCreate,\n    Radio: RadioCreate,\n}\n\nexport const componentsSolve = {\n    Paragraph: ParagraphSolve,\n    Checkbox: CheckboxSolve,\n    Line: LineSolve,\n    Radio: RadioSolve,\n}\n\nexport const types = [\"Checkbox\", \"Paragraph\", \"Line\", \"Radio\"];\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from \"react-redux\"\nimport { updateQuestion } from \"../../redux/formSlice\"\n\nconst ParagraphType = ({ value }) => {\n\n    const dispatch = useDispatch()\n\n    const handleInput = e => dispatch(updateQuestion({id: value.question_id, value: e.target.value}))\n\n    return (\n        <div className=\"paragraph-create\">\n            <TextareaAutosize \n                name=\"quest_title\" \n                onChange={handleInput} \n                value={value.quest_title} \n            />\n            <TextareaAutosize minRows={3} />\n        </div>\n    )\n}\n\nexport default ParagraphType;\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from \"react-redux\"\nimport { updateQuestion, updateSubQuestion, addSubQuestion, deleteSubQuestion } from \"../../redux/formSlice\";\n\nconst CheckboxType = ({ value }) => {\n\n    const dispatch = useDispatch()\n    \n    const handleInput = e => dispatch(updateQuestion({id: value.question_id, value: e.target.value}))\n    \n    const handleCheckbox = e => {\n        dispatch(updateSubQuestion({id: value.question_id, qq_id: e.target.id, value: e.target.value}))\n    }\n\n    const handleAdd = () => dispatch(addSubQuestion({ id: value.question_id, form_id: value.form_id }))\n    \n    const deleteCheckbox = e => dispatch(deleteSubQuestion({ value, qq_id: e.target.id }))\n\n    return (\n        <div className=\"checkbox-create\">\n            <TextareaAutosize \n                onChange={handleInput} \n                name=\"quest_title\" \n                value={value.quest_title}\n            />\n            {value?.sub_questions?.map(box => {\n                return (\n                    <div className=\"check-box\" key={box.qq_id}>\n                        <div>\n                            <input \n                                type=\"text\"\n                                className=\"check\"\n                                type=\"checkbox\" \n                                value={box.qq_title}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"check-input\"\n                                id={box.qq_id} \n                                onChange={handleCheckbox}\n                                value={box.qq_title}\n                            />\n                        </div>\n                        <div id={box.qq_id} onClick={deleteCheckbox} className=\"fas fa-times\"></div>\n                    </div>\n                )\n            })}\n            <div className=\"fas fa-plus\" onClick={handleAdd}>\n                <input placeholder=\"Add Option...\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default CheckboxType;\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from \"react-redux\"\nimport { updateQuestion } from \"../../redux/formSlice\"\n\nconst LineType = ({ value }) => {\n\n    const dispatch = useDispatch()\n\n    const handleInput = e => dispatch(updateQuestion({id: value.question_id, value: e.target.value}))\n\n    return (\n        <div className=\"line-create\">\n            <TextareaAutosize \n                name=\"quest_title\" \n                onChange={handleInput} \n                value={value.quest_title} \n            />\n            <input />\n        </div>\n    )\n}\n\nexport default LineType;\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from \"react-redux\"\nimport { updateQuestion, updateSubQuestion, addSubQuestion, deleteSubQuestion } from \"../../redux/formSlice\";\n\nconst LineType = ({ value }) => {\n\n    const dispatch = useDispatch()\n\n    const handleInput = e => dispatch(updateQuestion({id: value.question_id, value: e.target.value}))\n\n    const handleCheckbox = e => {\n        dispatch(updateSubQuestion({id: value.question_id, qq_id: e.target.id, value: e.target.value}))\n    }\n\n    const handleAdd = () => dispatch(addSubQuestion({ id: value.question_id, form_id: value.form_id }))\n\n    const deleteCheckbox = e => dispatch(deleteSubQuestion({ value, qq_id: e.target.id }))\n\n    return (\n        <div className=\"checkbox-create\">\n            <TextareaAutosize\n                onChange={handleInput} \n                name=\"quest_title\" \n                value={value.quest_title}\n            />\n            {value?.sub_questions?.map(box => {\n                return (\n                    <div className=\"check-box\" key={box.qq_id}>\n                        <div>\n                            <input \n                                type=\"text\"\n                                className=\"radio\"\n                                type=\"radio\" \n                                value={box.qq_title}\n                                id={box.qq_title}\n                                name={value.question_id}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"check-input\"\n                                id={box.qq_id} \n                                onChange={handleCheckbox}\n                                value={box.qq_title}\n                            />\n                        </div>\n                        <div id={box.qq_id} onClick={deleteCheckbox} className=\"fas fa-times\"></div>\n                    </div>\n                )\n            })}\n            <div className=\"fas fa-plus\" onClick={handleAdd}>\n                <input placeholder=\"Add Option...\"/>\n            </div>\n           \n        </div>\n    )\n}\n\nexport default LineType;\n","import TextareaAutosize from 'react-textarea-autosize';\n\nconst ParagraphType = ({ value }) => {\n\n    const handleInput = e => value.answer_text = e.target.value\n    \n    return (\n        <>\n            <div>{value.quest_title}</div>\n            <TextareaAutosize minRows={3} onChange={handleInput}/>\n        </>\n    )\n}\n\nexport default ParagraphType;\n","const CheckboxType = ({ value }) => {\n\n    const handleInput = e => {\n        if (!value[\"answer_array\"]) value[\"answer_array\"] = []\n        if (value[\"answer_array\"].includes(e.target.value)) {\n            value[\"answer_array\"] = value[\"answer_array\"].filter(answer => answer != e.target.value)\n        }\n        else value[\"answer_array\"].push(e.target.value)\n    }\n\n    return (\n        <>\n        <h2>{value.quest_title}</h2>\n        {value?.sub_questions?.map(box => {\n            return (\n                <div className=\"check-box\" key={box.qq_id} >\n                    <input \n                        onChange={handleInput} \n                        type=\"checkbox\" \n                        id={box.qq_id + \"\" + box.question_id} \n                        value={box.qq_title} \n                    />\n                    <label htmlFor={box.qq_id + \"\" + box.question_id}>{box.qq_title}</label>\n                </div>\n            )\n        })}\n        </>\n    )\n}\n\nexport default CheckboxType;\n","const LineType = ({ value }) => {\n\n    const handleInput = e => value.answer_text = e.target.value\n     \n    return (\n        <>\n            <div>{value.quest_title}</div>\n            <input type=\"text\" onChange={handleInput}/>\n        </>\n    )\n}\n\nexport default LineType;\n","const RadioType = ({ value }) => {\n\n    const handleInput = e => value.answer_text = e.target.value\n    \n    return (\n        <>\n        <h2>{value.quest_title}</h2>\n        {value?.sub_questions?.map(box => {\n            return (\n                <div className=\"check-box\" key={box.qq_id} >\n                    <input \n                        onChange={handleInput} \n                        type=\"radio\" \n                        id={box.qq_id + \"\" + box.question_id} \n                        value={box.qq_title} \n                        name={value.question_id}\n                    />\n                    <label htmlFor={box.qq_id + \"\" + box.question_id}>{box.qq_title}</label>\n                </div>\n            )\n        })}\n        </>\n    )\n}\n\nexport default RadioType;\n","import TextareaAutosize from 'react-textarea-autosize';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport debounce from '../utils/debounce';\nimport { useCallback } from 'react';\nimport { sendInfoToApi, updateForm } from '../redux/formSlice';\n\nconst FormHeader = () => {\n\n    const dispatch = useDispatch()\n\n    const info = useSelector(state => state.form)\n\n    const saveForm = useCallback(debounce(() => dispatch(sendInfoToApi())), []);\n\n    const handleInput = e => dispatch(updateForm({ name: e.target.name, value: e.target.value}))\n\n    return (\n        <header className=\"form-header\" onChange={saveForm}>\n            <TextareaAutosize \n                onChange={handleInput} \n                name=\"form_title\" \n                value={info.form_title}\n            />\n            <TextareaAutosize \n                onChange={handleInput}\n                name=\"descrip\" \n                value={info.descrip || \"\"}\n                minRows={3}\n            />\n        </header>\n    )\n}\n\nexport default FormHeader;\n","import { useDispatch } from \"react-redux\"\nimport { deleteQuestion, changeType, setRequired } from \"../redux/formSlice\"\nimport { types } from \"../utils/variables\"\n\nconst QuestionOptions = ({ value }) => {\n\n    const dispatch = useDispatch();\n\n    const toDeleteQuestions = () => dispatch(deleteQuestion({ value }))\n    \n    const toSetRequired = () => dispatch(setRequired({ id: value.question_id }))\n\n    const toChangeType = e => dispatch(changeType({ id: value.question_id, type: e.target.value }))\n\n    return (\n        <div className=\"question-options\">\n            <div className=\"far fa-trash-alt\" onClick={toDeleteQuestions}></div>\n            <div className=\"required\">\n                <label htmlFor=\"required\">Required</label>\n                <input checked={value.required} id=\"required\" type=\"checkbox\" className=\"checkbox-fake\" onClick={toSetRequired} />\n            </div>\n            <div>\n                <select value={value.question_type} onChange={toChangeType} name=\"type\" id=\"type\">\n                    {types.map(type => <option key={type} value={type}>{type}</option>)}\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default QuestionOptions;\n","import { useDispatch } from \"react-redux\"\nimport { addQuestion } from \"../redux/formSlice\";\n\nconst AddType = ({ open, form_id }) => {\n\n      const dispatch = useDispatch();    \n\n      function newQuestion(e) {\n            dispatch(addQuestion({question_type: e.target.getAttribute(\"name\"), form_id}))                  \n      }\n\n      if (!open) return null\n\n      return (    \n      \t<div className=\"choose-type\">\n\t      \t<div className=\"fas fa-check-square\" name=\"Checkbox\" onClick={newQuestion}></div>\n                  <div className=\"fas fa-align-left\" name=\"Paragraph\" onClick={newQuestion}></div>\n                  <div className=\"fab fa-line\" name=\"Line\" onClick={newQuestion}></div>\n        \t</div>\n      )\n}\n\nexport default AddType;\n","import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useState, useCallback } from \"react\";\nimport { sendQuestionsToApi } from \"../../redux/formSlice\";\nimport debounce  from \"../../utils/debounce\";\nimport { componentsCreate } from \"../../utils/variables\";\nimport FormHeader from \"../../components/FormHeader\";\nimport QuestionOptions from \"../../components/QuestionOptions\";\nimport AddType from \"../../components/AddType\";\n\nconst CreateForm = ({ form_id }) => {\n\n    const questions = useSelector(state => state.form.questions)\n\n    const [ open, setOpen ] = useState(false)\n    \n    const openTypes = () => setOpen(!open)\n\n    const dispatch = useDispatch()\n\n    const questForm = useCallback(debounce(() => dispatch(sendQuestionsToApi())), []);\n\n    return (\n        <section className=\"create-form\">\n\n            <FormHeader/>\n            \n            <TransitionGroup component={null}>\n            {questions?.map(quest => {\n\n                    const SpecificType = componentsCreate[quest.question_type]\n\n                    return ( \n                        <CSSTransition\n                            key={quest.question_id}\n                            classNames=\"example\"\n                            timeout={{ enter: 300, exit: 300 }}\n                        >\n                        <div onClick={questForm} onChange={questForm} className=\"question-div\">\n                            <SpecificType value={quest}/>\n                            <QuestionOptions value={quest}/>\n                        </div>\n                        </CSSTransition>\n                    )        \n            })}\n            </TransitionGroup>\n\n            <article className=\"choose-type-main\" onClick={questForm}>\n                <div className=\"fas fa-plus-circle\" onClick={openTypes}></div>\n                <AddType form_id={form_id} open={open}/>\n            </article>\n    \n        </section>\n    )\n};\n\nexport default CreateForm;\n","const QuestResponse = ({ answersQuest }) => {\n    return (\n        <section className=\"responses\">\n        {answersQuest ?\n        <>\n            {Object.entries(answersQuest).map(answer => {\n                return (\n                    <article>\n                        <h2>{answer[1][0].quest_title}</h2>\n                        <div>\n                        {answer[1].map(ans => {\n                            return (\n                                <>\n                                <p>{ans.answer_text}</p>\n                                {ans.answer_array?.map(a => <p>{a}</p>)}\n                                </>\n                            )\n                        })}\n                        </div>\n                    </article>\n                )\n            })}\n        </>\n\n        :\n\n        <p>No answers yet!</p>\n        }\n        </section>\n    )\n}\n\nexport default QuestResponse;\n","const UserResponse = ({ answersUser }) => {\n    return (\n        <section className=\"responses\">\n        {answersUser ?\n        <>\n            {Object.entries(answersUser).map((answer, ind) => {\n                return (\n                    <article>\n                        <h2>{ind+1}</h2>\n                        <div>\n                        {answer[1].map(ans => {\n                            return (\n                                <>\n                                <p>{ans.quest_title}:</p>\n                                <p>{ans.answer_text}</p>\n                                {ans.answer_array?.map(a => <p>{a}</p>)}\n                                </>\n                            )\n                        })}\n                        </div>\n                    </article>\n                )\n            })}\n        </>\n\n        :\n\n        <p>No answers yet!</p>\n        }\n        </section>\n    )\n}\n\nexport default UserResponse;\n","import { NavLink, Switch, Route } from \"react-router-dom\";\nimport QuestResponse from \"../../components/QuestResponse\"\nimport UserResponse from \"../../components/UserResponse\"\n\nconst FormResponses = ({ answersUser, answersQuest, form_id }) => {\n    return (\n        <section>\n            <div className=\"nav-links\">\n                <NavLink \n                    exact activeClassName=\"selected\" \n                    to={{pathname:`/create_form/${form_id}/response_form`}}>\n                        Questions\n                </NavLink>\n                <NavLink \n                    exact activeClassName=\"selected\" \n                    to={{pathname:`/create_form/${form_id}/response_form/user`}}>\n                        Individuals\n                </NavLink>  \n            </div>\n            <Switch>\n                <Route exact path=\"/create_form/:id/response_form\" >\n                    <QuestResponse answersQuest={answersQuest} />\n                </Route>\n                <Route exact path=\"/create_form/:id/response_form/user\">\n                    <UserResponse answersUser={answersUser}/>\n                </Route>\n            </Switch>\n        </section>\n    )\n}\n\nexport default FormResponses;\n","import { NavLink, useLocation } from \"react-router-dom\";\n\nconst FormOptions = ({ form_id }) => {\n\n    const { pathname } = useLocation();\n    \n    function getLink() {\n        navigator.clipboard.writeText(`${window.location.origin}\\\\fillout_form\\\\${form_id}`) \n    }\n\n    function sendToFillout() {\n        window.location.href = `${window.location.origin}\\\\fillout_form\\\\${form_id}`\n    }\n\n    return (\n        <nav>\n            <div className=\"nav-options\">\n                <div className=\"fas fa-eye\" onClick={sendToFillout}></div>\n                <div className=\"fas fa-share-square\" onClick={getLink}></div>\n            </div>\n            <div className=\"nav-links\">        \n                <NavLink \n                    exact activeClassName=\"selected\" \n                    to={{pathname:`/create_form/${form_id}`}}>\n                        Form\n                </NavLink>\n                <NavLink \n                    isActive={() => [`/create_form/${form_id}/response_form`, \n                                    `/create_form/${form_id}/response_form/user`].includes(pathname)}\n                    to={{pathname:`/create_form/${form_id}/response_form`}}>\n                        Responses\n                </NavLink>          \n            </div>\n        </nav>\n    )\n}\n\nexport default FormOptions;\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  \t<main className=\"not-found\">\n    \t<h1>404 - Not Found!</h1>\n    \t<Link to=\"/\">Go Home</Link>\n  \t</main>\n);\n\nexport default NotFound;\n","export default function groupArray(array, id) {\n\n    const map = {};\n\n\tarray.forEach(element => {\n\t\t\t\n\t\tconst group = element[id];\n\t\t\n\t\tif(!map[group]) {\n\t\t\tmap[group] = [];\n\t\t}\n\n\t\tmap[group].push(element);\n\t});\n\n    return map;\n}","import CreateForm from \"./CreateForm\";\nimport FormResponses from \"./FormResponses\";\nimport FormOptions from \"../../components/FormOptions\";\nimport NotFound from \"../../components/NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\"\nimport { getFormInfo } from \"../../redux/formSlice\"\nimport receiveFetch from \"../../utils/receiveFetch\"\nimport groupArray from \"../../utils/groupArray\";\n\nconst FormMain = () => {\n\n    const { id } = useParams()\n\n\tconst form_id = id\n\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => dispatch(getFormInfo({ form_id })), [])\n\n\tconst [ answersUser, setAnswersUser ] = useState();\n\tconst [ answersQuest, setAnswersQuest ] = useState();\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await receiveFetch(\"/api/get_responses\", \"POST\", { form_id })\n\t\t\tsetAnswersUser(groupArray(result, \"index_id\"))\n\t\t\tsetAnswersQuest(groupArray(result, \"question_id\"))\n\t\t}\n\t\n        fetchData()\n    }, [])\n\n  \treturn (    \n        <main>\n        \t<FormOptions form_id={form_id} />  \n\n  \t  \t\t<Switch>\n  \t  \t\t\t<Route exact path=\"/create_form/:id\">\n\t\t\t\t\t<CreateForm form_id={form_id} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/create_form/:id/response_form\">\n\t\t\t\t\t<FormResponses answersUser={answersUser} answersQuest={answersQuest} form_id={form_id} />\n\t\t\t\t</Route>\n  \t  \t\t  \t<Route>\n\t\t\t\t\t<NotFound />\n\t\t\t\t</Route>\n  \t  \t\t</Switch>\n        </main>\n  \t);\n};\n\nexport default FormMain;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport receiveFetch from \"../../utils/receiveFetch\"\nimport { componentsSolve } from \"../../utils/variables\";\n\nconst FilloutForm = () => {\n\n    const { id } = useParams()\n\n    const [ form, setForm ] = useState([])\n\n    useEffect(() => {\n        async function fetchData() {\n            const form_info = await receiveFetch(\"/auth/get_form_info\", \"POST\", { id })\n            setForm(form_info)\n        }\n\n        fetchData()\n    }, [])\n\n    function sendForm(e) {\n        e.preventDefault()\n        console.log(form)\n        receiveFetch(\"/auth/send_filled_form\", \"POST\", form )\n        .then(() => window.location.href = `/`)\n        .catch(() => window.location.href = `/`)\n    }\n\n    return (\n        <main className=\"fillout-form\">\n            \n            <header>\n                <h1>{form?.form_title}</h1>\n                <p>{form?.descrip}</p>\n            </header>\n\n            <form onSubmit={sendForm}>\n\n                {form?.questions?.map(quest => {\n\n                    const SpecificType = componentsSolve[quest.question_type]\n                \n                    return ( \n                        <div className=\"fillout-quest-div\" key={quest.question_id}>\n                            <SpecificType value={quest} />\n                        </div>\n                    )        \n                })} \n\n                <button type=\"submit\">Submit</button>\n            </form>\n        </main>\n    )\n}\n\nexport default FilloutForm;\n","import { Link } from \"react-router-dom\";\n\nconst Aside = () => {\n\n    const logOut = () => {\n        fetch(\"/auth/logout\")\n        localStorage.clear()\n        window.location.href=\"/\"\n    }\n\n    return (\n        <aside>\n            <Link to=\"/\">My Forms</Link>\n            <div onClick={logOut}>LogOut</div>\n        </aside>\n    )\n};\n\nexport default Aside;\n","import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst MobileAside = () => {\n\n    const [ open, setOpen ] = useState(false)\n\n    const openBurger = () => setOpen(!open)\n    \n    const logOut = () => {\n        fetch(\"/auth/logout\")\n        localStorage.clear()\n        window.location.href=\"/\"\n    }\n\n    return (\n        <div className=\"mobile-menu\">\n            <div className={open ? \"burger-crossed\" : \"burger-bar\"} onClick={openBurger}>\n      \t        <div className=\"div1\"/>\n      \t        <div className=\"div2\"/>\n      \t        <div className=\"div3\"/>\n            </div>\n            <div className={open ? \"mobile-aside\" : \"mobile-hidden\"} >\n                <Link onClick={openBurger} to=\"/\">My Forms</Link>\n                <div onClick={openBurger} onClick={logOut}>LogOut</div>\n            </div>\n        </div>\n    )\n}\n\nexport default MobileAside;\n","import FormList from \"./FormList\";\nimport FormMain from \"./FormMain\";\nimport FilloutForm from \"../LoggedOut/FilloutForm\";\nimport Aside from \"../../components/Aside\";\nimport MobileAside from \"../../components/MobileAside\";\nimport NotFound from \"../../components/NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst LoggedIn = () => {\n  \treturn (     \n  \t  \t<main className=\"logged-in-main\">\n  \t  \t    <Aside />\n\t\t\t<MobileAside />\n  \t  \t    <Switch>\n  \t  \t      \t<Route exact path=\"/\"><FormList /></Route>\n  \t  \t    \t<Route path=\"/create_form/:id\"><FormMain /></Route>\n\t\t\t\t<Route path=\"/fillout_form/:id\"><FilloutForm /></Route>\n  \t  \t      \t<Route><NotFound /></Route>\n  \t  \t    </Switch>\n  \t  \t</main>\n  \t);\n};\n\nexport default LoggedIn;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport receiveFetch from \"../../utils/receiveFetch\"\n\nconst Login = () => {\n\n  \tconst [ list, setList ] = useState([])\n  \tconst [ loginfo, setLoginfo ] = useState({ username:\"\", password:\"\" })\n  \tconst [ errorinfo, setErrorinfo ] = useState(\"\")\n\n  \tasync function sendLoginfo(e) {\n  \t  \te.preventDefault()\n  \t  \tconst res = await receiveFetch(\"/auth/login\", \"POST\", loginfo)\n  \t  \tif (res === loginfo.username) {\n  \t  \t  \tlocalStorage.setItem(\"user\", res)\n  \t  \t  \twindow.location.href = \"/\"\n  \t  \t} else {\n  \t  \t  \tsetErrorinfo(res.message);\n  \t  \t}\n  \t}\n\n  \tfunction handleInput(e) {\n\t\tsetLoginfo(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  \t}\n\n  \tfunction addToList(e) {\n    \tsetList(prev => [...prev, e.target.name])\n  \t}\n\n  \tfunction removeFromList(e) {\n    \tif (!e.target.value) setList(prev => [...prev].filter(x => x != e.target.name))\n  \t}\n\n  \treturn (\n\n\t\t<form className=\"auth-form\" onSubmit={sendLoginfo}>\n\t\t  \t<h1>Login</h1>\n\t\t  \t<div>\n\t\t  \t  \t<input \n\t\t  \t  \t  \tautoComplete=\"off\"\n\t\t  \t  \t  \ttype=\"text\"\n\t\t  \t  \t  \tonChange={handleInput}\n\t\t  \t  \t  \tonFocus={addToList} \n\t\t  \t  \t  \tonBlur={removeFromList}\n\t\t  \t  \t  \tname=\"username\" \n\t\t  \t  \t  \tid=\"username\"\n\t\t  \t  \t/>\n\t\t  \t  \t<label className={list.includes(\"username\") ? \"auth-label\" : null} htmlFor=\"username\">Username:</label>\n\t\t  \t</div>\n\t\t  \t<div>\n\t\t  \t  \t<input \n\t\t  \t  \t  \ttype=\"password\"\n\t\t  \t  \t  \tonFocus={addToList} \n\t\t  \t  \t  \tonChange={handleInput}\n\t\t  \t  \t  \tonBlur={removeFromList}\n\t\t  \t  \t  \tname=\"password\" \n\t\t  \t  \t  \tid=\"password\"\n\t\t  \t  \t/>\n\t\t  \t  \t<label className={list.includes(\"password\") ? \"auth-label\" : null} htmlFor=\"password\">Password:</label>\n\t\t  \t</div>\n\t\t  \t<button type=\"submit\">Login</button>\n\t\t  \t<p>{errorinfo}</p>\n\t\t  \t<Link to=\"/register\">Dont have an account? Register!</Link>\n\t\t</form>\n  \t);\n};\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport receiveFetch from \"../../utils/receiveFetch\"\n\nconst Register = () => {\n\n  \tconst [ list, setList ] = useState([])\n  \tconst [ errorinfo, setErrorinfo ] = useState(\"\")\n  \tconst [ registerInfo, setregisterInfo ] = useState({\n  \t  \tusername: \"\",\n  \t  \tpassword: \"\",\n  \t  \tconfirmpassword: \"\",\n  \t})\n\n  \tconst { password, confirmpassword } = registerInfo\n\n  \tasync function sendregisterInfo(e) {\n  \t  \te.preventDefault()\n  \t  \tif (password === confirmpassword) {\n  \t  \t  \tconst res = await receiveFetch(\"/auth/register\", \"POST\", registerInfo)\n  \t  \t  \tif (res === true) {\n  \t  \t    \twindow.location.href = \"/\"\n  \t  \t  \t} else {\n  \t  \t    \tsetErrorinfo(res.message);\n  \t  \t  \t}\n  \t  \t} else {\n  \t  \t\tsetErrorinfo(\"Passwords dont match!\")\n  \t  \t}\n  \t}\n\n  \tfunction handleInput(e) {\n  \t  \tsetregisterInfo(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  \t}\n\n  \tfunction addToList(e) {\n  \t  \tsetList(prev => [...prev, e.target.name])\n  \t}\n\n  \tfunction removeFromList(e) {\n  \t  \tif (!e.target.value) setList(prev => [...prev].filter(x => x != e.target.name))\n  \t}\n\n  \treturn (\n    \t<form className=\"auth-form\" onSubmit={sendregisterInfo}>\n    \t  \t<h1>Register</h1>\n    \t  \t<div>\n    \t  \t  \t<input \n    \t  \t  \t  \tautoComplete=\"off\"\n    \t  \t  \t  \ttype=\"text\"\n    \t  \t  \t  \tonFocus={addToList} \n    \t  \t  \t  \tonChange={handleInput}\n    \t  \t  \t  \tonBlur={removeFromList}\n    \t  \t  \t  \tname=\"username\" \n    \t  \t  \t  \tid=\"username\"\n    \t  \t  \t/>\n    \t  \t  \t<label className={list.includes(\"username\") ? \"auth-label\" : null} htmlFor=\"username\">Username:</label>\n    \t  \t</div>\n    \t  \t<div>\n    \t  \t  \t<input \n    \t  \t  \t  \ttype=\"password\"\n    \t  \t  \t  \tonFocus={addToList} \n    \t  \t  \t  \tonChange={handleInput}\n    \t  \t  \t  \tonBlur={removeFromList}\n    \t  \t  \t  \tname=\"password\" \n    \t  \t  \t  \tid=\"password\"\n    \t  \t  \t/>\n    \t  \t  \t<label className={list.includes(\"password\") ? \"auth-label\" : null} htmlFor=\"password\">Password:</label>\n    \t  \t</div>\n    \t  \t<div>\n    \t  \t  \t<input \n    \t  \t  \t  \ttype=\"password\"\n    \t  \t  \t  \tonFocus={addToList} \n    \t  \t  \t  \tonChange={handleInput}\n    \t  \t  \t  \tonBlur={removeFromList}\n    \t  \t  \t  \tname=\"confirmpassword\" \n    \t  \t  \t  \tid=\"confirmpassword\"\n    \t  \t  \t/>\n    \t  \t  \t<label className={list.includes(\"confirmpassword\") ? \"auth-label\" : null} htmlFor=\"confirmpassword\">Confirm Password:</label>\n    \t  \t</div>\n    \t  \t<button type=\"submit\">Register</button>\n    \t  \t<p>{errorinfo}</p>\n    \t  \t<Link to=\"/\">Already have an Account? Login!</Link>\n    \t</form>\n  );\n};\n\nexport default Register;\n","const Footer = () => {\n    return (\n        <footer>\n            <ul>\n                <li><a href=\"https://github.com/ivanbakotin\">Github</a></li>\n            </ul>\n        </footer>\n    )\n};\n\nexport default Footer;\n","import { Link } from \"react-router-dom\"\n\nconst Nav = () => {\n    return (\n        <nav>\n            <h2>Not a member yet? <Link to=\"/register\">Sign up now!</Link></h2>\n        </nav>\n    )\n};\n\nexport default Nav;\n","import Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport FilloutForm from \"./FilloutForm\";\nimport Footer from \"../../components/Footer.js\";\nimport Header from \"../../components/Nav.js\";\nimport NotFound from \"../../components/NotFound.js\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst LoggedOut = () => {\n    return (\n        <main className=\"logged-out-main\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\"><Login /></Route>\n              <Route path=\"/register\"><Register /></Route>\n              <Route path=\"/fillout_form/:id\"><FilloutForm /></Route>\n              <Route><NotFound /></Route>\n            </Switch>\n            <Footer />\n        </main>\n    );\n};\n\nexport default LoggedOut;\n","const Loading = () => (\n    <div className=\"loading-circle\">\n        <div/>\n    </div >\n);\n\nexport default Loading;\n","import { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport LoggedIn from \"./pages/LoggedIn/LoggedIn\";\nimport LoggedOut from \"./pages/LoggedOut/LoggedOut.js\";\nimport Loading from \"./components/Loading\"\nimport useFetchGet from \"./hooks/useFetchGet.js\";\n\nconst App = () => {\n  \n  const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n  const [ isLoading, setIsLoading ] = useState(false);\n  \n  const fetchData = useFetchGet(\"/auth/islog\")\n\n  useEffect(() => {\n    if (fetchData) {\n      localStorage.setItem(\"user\", fetchData)\n      setIsLoggedIn(true)\n      setIsLoading(true)\n    } \n    if(fetchData != undefined) {\n      setIsLoading(true)\n    }\n  }, [fetchData]);\n\n  return (\n    <BrowserRouter>\n        {isLoading ? isLoggedIn ? \n  \n          <LoggedIn />\n\n          :\n\n          <LoggedOut />\n\n          :\n\n          <Loading />\n        }\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport formSlice from \"./formSlice\"\n\nexport default configureStore({\n    reducer: {\n       form: formSlice,\n    },\n})\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\"\nimport \"./styles/styles.css\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}